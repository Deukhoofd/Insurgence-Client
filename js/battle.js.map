{"version":3,"sources":["../src/battle.ts"],"names":["Pokemon","data","side","name","speciesForme","ident","details","searchid","slot","fainted","hp","maxhp","level","gender","shiny","hpcolor","moves","ability","baseAbility","item","itemEffect","prevItem","prevItemEffect","terastallized","boosts","status","statusStage","volatiles","turnstatuses","movestatuses","lastMove","moveTrack","statusData","sleepTurns","toxicTurns","timesAttacked","sprite","battle","scene","addPokemonSprite","isActive","active","includes","getHPColor","ratio","getHPColorClass","getPixelRange","pixels","color","epsilon","getFormattedRange","range","precision","separator","percentage","Math","abs","floor","toFixed","lower","upper","ceil","getDamageRange","damage","length","undefined","oldrange","newrange","r","healthParse","hpstring","parsedamage","heal","parenIndex","lastIndexOf","parseFloat","isNaN","ret","percent","round","substr","oldhp","oldmaxhp","oldwidth","hpWidth","oldcolor","parseHealth","oldnum","delta","deltawidth","checkDetails","indexOf","replace","getIdent","slots","removeVolatile","volatile","removeEffect","hasVolatile","addVolatile","args","addEffect","removeTurnstatus","hasTurnstatus","addTurnstatus","toID","clearTurnstatuses","id","updateStatbar","removeMovestatus","hasMovestatus","addMovestatus","clearMovestatuses","clearVolatiles","clearEffects","rememberMove","moveName","pp","recursionSource","Dex","get","charAt","transform","entry","push","rememberAbility","isNotBase","abilities","getBoost","boostStat","boostStatTable","atk","def","spa","spd","spe","accuracy","evasion","spc","isRBY","gen","tier","goodBoostTable","badBoostTable","getWeightKg","serverPokemon","autotomizeFactor","autotomize","max","getSpecies","weightkg","getBoostType","clearVolatile","i","splice","copyVolatileFrom","pokemon","copySource","removeTransform","copyTypesFrom","preterastallized","getTypes","types","addedType","join","typechange","split","filter","typeName","typeadd","isGrounded","hasPseudoWeather","effectiveAbility","getTypeList","dex","ngasActive","isPermanent","concat","getSpeciesForme","formechange","species","getBaseSpecies","reset","maxWidth","getHPText","destroy","Side","n","sideid","isFar","foe","ally","avatar","rating","totalPokemon","x","y","z","missedPokemon","wisher","lastPokemon","sideConditions","faintCounter","rollTrainerSprites","sprites","random","behindx","offset","behindy","leftof","behind","clearPokemon","setAvatar","setName","addSideCondition","effect","persist","condition","removeSideCondition","addPokemon","replaceSlot","oldItem","parseDetails","poke","speciesClause","existingTable","toRemove","newMegaZor","poke1i","poke1","poke1UnMegaSearchId","poke2i","poke2","illusionFound","curPoke","updateSidebar","switchIn","kwArgs","getEffect","from","animSummon","dragIn","oldpokemon","animDragOut","animDragIn","animUnsummon","switchOut","log","swapTo","target","oslot","swapWith","nslot","faint","animFaint","Battle","options","sidesSwitched","stepQueue","preemptStepQueue","waitForAnimations","currentStep","seeking","activeMoveIsSpread","subscription","mute","messageFadeTime","messageShownTime","turnsSinceMoved","turn","atQueueEnd","started","ended","isReplay","usesUpkeep","weather","pseudoWeather","weatherTimeLeft","weatherMinTimeLeft","mySide","nearSide","farSide","p1","p2","p3","p4","pokemonControlled","sides","myPokemon","myAllyPokemon","teamPreviewCount","gameType","rated","rules","isBlitz","endLastTurnPending","totalTimeLeft","graceTimeLeft","kickingInactive","roomid","hardcoreMode","ignoreNicks","prefs","ignoreOpponent","ignoreSpects","debug","joinButtons","paused","$frame","$logFrame","BattleScene","BattleSceneStub","Error","resetStep","subscribe","listener","removePseudoWeather","updateWeather","addPseudoWeather","minTimeLeft","timeLeft","pseudoWeatherName","getAllActive","pokemonList","abilityActive","excludePokemon","a","slice","pause","resetTurnsSinceMoved","nextStep","preempt","add","resetToCurrentTurn","seekTurn","Infinity","switchSides","setPerspective","startsWith","start","winner","prematureEnd","endLastTurn","updateStatbars","setHardcoreMode","mode","updateSidebars","setTurn","turnNum","updateTurnCounters","incrementTurn","stopSeeking","updateAcceleration","changeWeather","weatherName","isUpkeep","upkeepWeather","isExtremeWeather","activateAbility","swapSideConditions","side1","side2","pWeather","cond","useMove","move","fromeffect","callerMoveForPressure","isZ","items","zMoveFrom","window","BattleItems","zMoveType","type","foeTargets","moveTarget","pressureTarget","animateMove","spread","still","miss","notarget","prepare","anim","runPrepareAnim","usedMove","runMoveAnim","targets","hitTarget","curTarget","getPokemon","cantUseMove","BattleStatusAnims","runStatusAnim","resultAnim","runOtherAnim","animReset","effectOrName","effectType","abilityActivateAnim","runMinor","nextArgs","nextKwargs","then","silent","closeMessagebar","simult","CONSUMED","ofpoke","of","itemPoke","category","damageinfo","hover","damageAnim","trackedMove","runResidualAnim","parsePokemonId","siden","healAnim","k","cpoke","formattedRange","diff","stat","amount","parseInt","stats","tmp","frompoke","volatilesToCopy","timeOffset","Config","server","afd","moveid","thaw","updateStatbarIfExists","eat","weaken","fail","wait","newSpeciesForme","commaIndex","trim","sp","getSpriteData","isFrontSprite","mod","oldsp","animTransform","tpoke","targetForme","endsWith","isCustomAnim","sanitizeName","typeAnim","already","block","interrupt","time","Number","number","pokeability","targetability","ability2","foeActive","maybeTarget","broken","getSide","persistent","upkeep","maxTimeLeft","pwID","checkActive","beforeMove","afterMove","pokemonid","output","isTeamPreview","splitDetails","pop","curhp","colorchar","test","slotChart","b","c","d","e","f","getSwitchedPokemon","parsedPokemonid","rememberTeamPreviewPokemon","findCorrespondingPokemon","isInactive","sidename","command","instantAdd","run","runMajor","resetSides","updateGen","ruleName","totalTime","graceTime","hasIndex","userid","app","user","room","rooms","BattleTextParser","parseNameParts","toUserid","users","userCount","userList","updateUserCount","updateNoUsersOnline","remove","oldid","set","away","hideJoinButtons","teamPreview","targetIndex","forGen","setFrameHTML","BattleLog","sanitizeHTML","setControlsHTML","str","shift","preemptCatchup","parseBattleLine","maybeCloseMessagebar","nextLine","err","stack","line","updateBgm","play","resume","skipTurn","forceReset","animationOn","animationOff","shouldStep","startAnimations","animations","finishAnimations","interruptionCount","done","setQueue","queue","setMute","require","global"],"mappings":"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","sourcesContent":["/**\r\n * Pokemon Showdown Battle\r\n *\r\n * This is the main file for handling battle animations\r\n *\r\n * Licensing note: PS's client has complicated licensing:\r\n * - The client as a whole is AGPLv3\r\n * - The battle replay/animation engine (battle-*.ts) by itself is MIT\r\n *\r\n * Layout:\r\n *\r\n * - Battle\r\n *   - Side\r\n *     - Pokemon\r\n *   - BattleScene\r\n *     - BattleLog\r\n *       - BattleTextParser\r\n *\r\n * When a Battle receives a message, it splits the message into tokens\r\n * and parses what happens, updating its own state, and then telling\r\n * BattleScene to do any relevant animations. The tokens then get\r\n * passed directly into BattleLog. If the message is an in-battle\r\n * message, it'll be extracted by BattleTextParser, which adds it to\r\n * both the battle log itself, as well as the messagebar.\r\n *\r\n * @author Guangcong Luo <guangcongluo@gmail.com>\r\n * @license MIT\r\n */\r\n\r\nimport {BattleSceneStub} from './battle-scene-stub';\r\nimport {BattleLog} from './battle-log';\r\nimport {BattleScene, PokemonSprite, BattleStatusAnims} from './battle-animations';\r\n\r\n/** [id, element?, ...misc] */\r\nexport type EffectState = any[] & {0: ID};\r\n/** [name, minTimeLeft, maxTimeLeft] */\r\nexport type WeatherState = [string, number, number];\r\nexport type HPColor = 'r' | 'y' | 'g';\r\n\r\nexport class Pokemon implements PokemonDetails, PokemonHealth {\r\n\tname = '';\r\n\tspeciesForme = '';\r\n\r\n\t/**\r\n\t * A string representing information extractable from textual\r\n\t * messages: side, nickname.\r\n\t *\r\n\t * Will be the empty string between Team Preview and the first\r\n\t * switch-in.\r\n\t *\r\n\t * Examples: `p1: Unown` or `p2: Sparky`\r\n\t */\r\n\tident = '';\r\n\t/**\r\n\t * A string representing visible information not included in\r\n\t * ident: species, level, gender, shininess. Level is left off\r\n\t * if it's 100; gender is left off if it's genderless.\r\n\t *\r\n\t * Note: Can be partially filled out in Team Preview, because certain\r\n\t * forme information and shininess isn't visible there. In those\r\n\t * cases, details can change during the first switch-in, but will\r\n\t * otherwise not change over the course of a game.\r\n\t *\r\n\t * Examples: `Mimikyu, L50, F`, `Steelix, M, shiny`\r\n\t */\r\n\tdetails = '';\r\n\t/**\r\n\t * `` `${ident}|${details}` ``. Tracked for ease of searching.\r\n\t *\r\n\t * As with ident, blank before the first switch-in, and will only\r\n\t * change during the first switch-in.\r\n\t */\r\n\tsearchid = '';\r\n\r\n\tside: Side;\r\n\tslot = 0;\r\n\r\n\tfainted = false;\r\n\thp = 0;\r\n\tmaxhp = 1000;\r\n\tlevel = 100;\r\n\tgender: GenderName = 'N';\r\n\tshiny = false;\r\n\r\n\thpcolor: HPColor = 'g';\r\n\tmoves: string[] = [];\r\n\tability = '';\r\n\tbaseAbility = '';\r\n\titem = '';\r\n\titemEffect = '';\r\n\tprevItem = '';\r\n\tprevItemEffect = '';\r\n\tterastallized: string | '' = '';\r\n\r\n\tboosts: {[stat: string]: number} = {};\r\n\tstatus: StatusName | 'tox' | '' | '???' = '';\r\n\tstatusStage = 0;\r\n\tvolatiles: {[effectid: string]: EffectState} = {};\r\n\tturnstatuses: {[effectid: string]: EffectState} = {};\r\n\tmovestatuses: {[effectid: string]: EffectState} = {};\r\n\tlastMove = '';\r\n\r\n\t/** [[moveName, ppUsed]] */\r\n\tmoveTrack: [string, number][] = [];\r\n\tstatusData = {sleepTurns: 0, toxicTurns: 0};\r\n\ttimesAttacked = 0;\r\n\r\n\tsprite: PokemonSprite;\r\n\r\n\tconstructor(data: PokemonDetails, side: Side) {\r\n\t\tthis.side = side;\r\n\t\tthis.speciesForme = data.speciesForme;\r\n\r\n\t\tthis.details = data.details;\r\n\t\tthis.name = data.name;\r\n\t\tthis.level = data.level;\r\n\t\tthis.shiny = data.shiny;\r\n\t\tthis.gender = data.gender || 'N';\r\n\t\tthis.ident = data.ident;\r\n\t\tthis.searchid = data.searchid;\r\n\r\n\t\tthis.sprite = side.battle.scene.addPokemonSprite(this);\r\n\t}\r\n\r\n\tisActive() {\r\n\t\treturn this.side.active.includes(this);\r\n\t}\r\n\r\n\t/** @deprecated */\r\n\tprivate getHPColor(): HPColor {\r\n\t\tif (this.hpcolor) return this.hpcolor;\r\n\t\tlet ratio = this.hp / this.maxhp;\r\n\t\tif (ratio > 0.5) return 'g';\r\n\t\tif (ratio > 0.2) return 'y';\r\n\t\treturn 'r';\r\n\t}\r\n\t/** @deprecated */\r\n\tprivate getHPColorClass() {\r\n\t\tswitch (this.getHPColor()) {\r\n\t\tcase 'y': return 'hpbar hpbar-yellow';\r\n\t\tcase 'r': return 'hpbar hpbar-red';\r\n\t\t}\r\n\t\treturn 'hpbar';\r\n\t}\r\n\tstatic getPixelRange(pixels: number, color: HPColor | ''): [number, number] {\r\n\t\tlet epsilon = 0.5 / 714;\r\n\r\n\t\tif (pixels === 0) return [0, 0];\r\n\t\tif (pixels === 1) return [0 + epsilon, 2 / 48 - epsilon];\r\n\t\tif (pixels === 9) {\r\n\t\t\tif (color === 'y') { // ratio is > 0.2\r\n\t\t\t\treturn [0.2 + epsilon, 10 / 48 - epsilon];\r\n\t\t\t} else { // ratio is <= 0.2\r\n\t\t\t\treturn [9 / 48, 0.2];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 24) {\r\n\t\t\tif (color === 'g') { // ratio is > 0.5\r\n\t\t\t\treturn [0.5 + epsilon, 25 / 48 - epsilon];\r\n\t\t\t} else { // ratio is exactly 0.5\r\n\t\t\t\treturn [0.5, 0.5];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (pixels === 48) return [1, 1];\r\n\r\n\t\treturn [pixels / 48, (pixels + 1) / 48 - epsilon];\r\n\t}\r\n\tstatic getFormattedRange(range: [number, number], precision: number, separator: string) {\r\n\t\tif (range[0] === range[1]) {\r\n\t\t\tlet percentage = Math.abs(range[0] * 100);\r\n\t\t\tif (Math.floor(percentage) === percentage) {\r\n\t\t\t\treturn percentage + '%';\r\n\t\t\t}\r\n\t\t\treturn percentage.toFixed(precision) + '%';\r\n\t\t}\r\n\t\tlet lower;\r\n\t\tlet upper;\r\n\t\tif (precision === 0) {\r\n\t\t\tlower = Math.floor(range[0] * 100);\r\n\t\t\tupper = Math.ceil(range[1] * 100);\r\n\t\t} else {\r\n\t\t\tlower = (range[0] * 100).toFixed(precision);\r\n\t\t\tupper = (range[1] * 100).toFixed(precision);\r\n\t\t}\r\n\t\treturn '' + lower + separator + upper + '%';\r\n\t}\r\n\t// Returns [min, max] damage dealt as a proportion of total HP from 0 to 1\r\n\tgetDamageRange(damage: any): [number, number] {\r\n\t\tif (damage[1] !== 48) {\r\n\t\t\tlet ratio = damage[0] / damage[1];\r\n\t\t\treturn [ratio, ratio];\r\n\t\t} else if (damage.length === undefined) {\r\n\t\t\t// wrong pixel damage.\r\n\t\t\t// this case exists for backward compatibility only.\r\n\t\t\treturn [damage[2] / 100, damage[2] / 100];\r\n\t\t}\r\n\t\t// pixel damage\r\n\t\tlet oldrange = Pokemon.getPixelRange(damage[3], damage[4]);\r\n\t\tlet newrange = Pokemon.getPixelRange(damage[3] + damage[0], this.hpcolor);\r\n\t\tif (damage[0] === 0) {\r\n\t\t\t// no change in displayed pixel width\r\n\t\t\treturn [0, newrange[1] - newrange[0]];\r\n\t\t}\r\n\t\tif (oldrange[0] < newrange[0]) { // swap order\r\n\t\t\tlet r = oldrange;\r\n\t\t\toldrange = newrange;\r\n\t\t\tnewrange = r;\r\n\t\t}\r\n\t\treturn [oldrange[0] - newrange[1], oldrange[1] - newrange[0]];\r\n\t}\r\n\thealthParse(hpstring: string, parsedamage?: boolean, heal?: boolean):\r\n\t\t[number, number, number] | [number, number, number, number, HPColor] | null {\r\n\t\t// returns [delta, denominator, percent(, oldnum, oldcolor)] or null\r\n\t\tif (!hpstring || !hpstring.length) return null;\r\n\t\tlet parenIndex = hpstring.lastIndexOf('(');\r\n\t\tif (parenIndex >= 0) {\r\n\t\t\t// old style damage and health reporting\r\n\t\t\tif (parsedamage) {\r\n\t\t\t\tlet damage = parseFloat(hpstring);\r\n\t\t\t\t// unusual check preseved for backward compatbility\r\n\t\t\t\tif (isNaN(damage)) damage = 50;\r\n\t\t\t\tif (heal) {\r\n\t\t\t\t\tthis.hp += this.maxhp * damage / 100;\r\n\t\t\t\t\tif (this.hp > this.maxhp) this.hp = this.maxhp;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.hp -= this.maxhp * damage / 100;\r\n\t\t\t\t}\r\n\t\t\t\t// parse the absolute health information\r\n\t\t\t\tlet ret = this.healthParse(hpstring);\r\n\t\t\t\tif (ret && (ret[1] === 100)) {\r\n\t\t\t\t\t// support for old replays with nearest-100th damage and health\r\n\t\t\t\t\treturn [damage, 100, damage];\r\n\t\t\t\t}\r\n\t\t\t\t// complicated expressions preserved for backward compatibility\r\n\t\t\t\tlet percent = Math.round(Math.ceil(damage * 48 / 100) / 48 * 100);\r\n\t\t\t\tlet pixels = Math.ceil(damage * 48 / 100);\r\n\t\t\t\treturn [pixels, 48, percent];\r\n\t\t\t}\r\n\t\t\tif (hpstring.substr(hpstring.length - 1) !== ')') {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\thpstring = hpstring.substr(parenIndex + 1, hpstring.length - parenIndex - 2);\r\n\t\t}\r\n\r\n\t\tlet oldhp = this.fainted ? 0 : (this.hp || 1);\r\n\t\tlet oldmaxhp = this.maxhp;\r\n\t\tlet oldwidth = this.hpWidth(100);\r\n\t\tlet oldcolor = this.hpcolor;\r\n\r\n\t\tthis.side.battle.parseHealth(hpstring, this);\r\n\t\tif (oldmaxhp === 0) { // max hp not known before parsing this message\r\n\t\t\toldmaxhp = oldhp = this.maxhp;\r\n\t\t}\r\n\r\n\t\tlet oldnum = oldhp ? (Math.floor(this.maxhp * oldhp / oldmaxhp) || 1) : 0;\r\n\t\tlet delta = this.hp - oldnum;\r\n\t\tlet deltawidth = this.hpWidth(100) - oldwidth;\r\n\t\treturn [delta, this.maxhp, deltawidth, oldnum, oldcolor];\r\n\t}\r\n\tcheckDetails(details?: string) {\r\n\t\tif (!details) return false;\r\n\t\tif (details === this.details) return true;\r\n\t\tif (this.searchid) return false;\r\n\t\tif (details.indexOf(', shiny') >= 0) {\r\n\t\t\tif (this.checkDetails(details.replace(', shiny', ''))) return true;\r\n\t\t}\r\n\t\t// the actual forme was hidden on Team Preview\r\n\t\tdetails = details.replace(/(-[A-Za-z0-9-]+)?(, |$)/, '-*$2');\r\n\t\treturn (details === this.details);\r\n\t}\r\n\tgetIdent() {\r\n\t\tlet slots = ['a', 'b', 'c', 'd', 'e', 'f'];\r\n\t\treturn this.ident.substr(0, 2) + slots[this.slot] + this.ident.substr(2);\r\n\t}\r\n\tremoveVolatile(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasVolatile(volatile)) return;\r\n\t\tdelete this.volatiles[volatile];\r\n\t}\r\n\taddVolatile(volatile: ID, ...args: any[]) {\r\n\t\tif (this.hasVolatile(volatile) && !args.length) return;\r\n\t\tthis.volatiles[volatile] = [volatile, ...args] as EffectState;\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasVolatile(volatile: ID) {\r\n\t\treturn !!this.volatiles[volatile];\r\n\t}\r\n\tremoveTurnstatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasTurnstatus(volatile)) return;\r\n\t\tdelete this.turnstatuses[volatile];\r\n\t}\r\n\taddTurnstatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t\tif (this.hasTurnstatus(volatile)) return;\r\n\t\tthis.turnstatuses[volatile] = [volatile];\r\n\t}\r\n\thasTurnstatus(volatile: ID) {\r\n\t\treturn !!this.turnstatuses[volatile];\r\n\t}\r\n\tclearTurnstatuses() {\r\n\t\tfor (let id in this.turnstatuses) {\r\n\t\t\tthis.removeTurnstatus(id as ID);\r\n\t\t}\r\n\t\tthis.turnstatuses = {};\r\n\t\tthis.side.battle.scene.updateStatbar(this);\r\n\t}\r\n\tremoveMovestatus(volatile: ID) {\r\n\t\tthis.side.battle.scene.removeEffect(this, volatile);\r\n\t\tif (!this.hasMovestatus(volatile)) return;\r\n\t\tdelete this.movestatuses[volatile];\r\n\t}\r\n\taddMovestatus(volatile: ID) {\r\n\t\tvolatile = toID(volatile);\r\n\t\tif (this.hasMovestatus(volatile)) return;\r\n\t\tthis.movestatuses[volatile] = [volatile];\r\n\t\tthis.side.battle.scene.addEffect(this, volatile);\r\n\t}\r\n\thasMovestatus(volatile: ID) {\r\n\t\treturn !!this.movestatuses[volatile];\r\n\t}\r\n\tclearMovestatuses() {\r\n\t\tfor (let id in this.movestatuses) {\r\n\t\t\tthis.removeMovestatus(id as ID);\r\n\t\t}\r\n\t\tthis.movestatuses = {};\r\n\t}\r\n\tclearVolatiles() {\r\n\t\tthis.volatiles = {};\r\n\t\tthis.clearTurnstatuses();\r\n\t\tthis.clearMovestatuses();\r\n\t\tthis.side.battle.scene.clearEffects(this);\r\n\t}\r\n\trememberMove(moveName: string, pp = 1, recursionSource?: string) {\r\n\t\tif (recursionSource === this.ident) return;\r\n\t\tmoveName = Dex.moves.get(moveName).name;\r\n\t\tif (moveName.charAt(0) === '*') return;\r\n\t\tif (moveName === 'Struggle') return;\r\n\t\tif (this.volatiles.transform) {\r\n\t\t\t// make sure there is no infinite recursion if both Pokemon are transformed into each other\r\n\t\t\tif (!recursionSource) recursionSource = this.ident;\r\n\t\t\tthis.volatiles.transform[1].rememberMove(moveName, 0, recursionSource);\r\n\t\t\tmoveName = '*' + moveName;\r\n\t\t}\r\n\t\tfor (const entry of this.moveTrack) {\r\n\t\t\tif (moveName === entry[0]) {\r\n\t\t\t\tentry[1] += pp;\r\n\t\t\t\tif (entry[1] < 0) entry[1] = 0;\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.moveTrack.push([moveName, pp]);\r\n\t}\r\n\trememberAbility(ability: string, isNotBase?: boolean) {\r\n\t\tability = Dex.abilities.get(ability).name;\r\n\t\tthis.ability = ability;\r\n\t\tif (!this.baseAbility && !isNotBase) {\r\n\t\t\tthis.baseAbility = ability;\r\n\t\t}\r\n\t}\r\n\tgetBoost(boostStat: BoostStatName) {\r\n\t\tlet boostStatTable = {\r\n\t\t\tatk: 'Atk',\r\n\t\t\tdef: 'Def',\r\n\t\t\tspa: 'SpA',\r\n\t\t\tspd: 'SpD',\r\n\t\t\tspe: 'Spe',\r\n\t\t\taccuracy: 'Accuracy',\r\n\t\t\tevasion: 'Evasion',\r\n\t\t\tspc: 'Spc',\r\n\t\t};\r\n\t\tif (!this.boosts[boostStat]) {\r\n\t\t\treturn '1&times;&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 6) this.boosts[boostStat] = 6;\r\n\t\tif (this.boosts[boostStat] < -6) this.boosts[boostStat] = -6;\r\n\t\tconst isRBY = this.side.battle.gen <= 1 && !this.side.battle.tier.includes('Stadium');\r\n\t\tif (!isRBY && (boostStat === 'accuracy' || boostStat === 'evasion')) {\r\n\t\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\t\tlet goodBoostTable = [\r\n\t\t\t\t\t'1&times;', '1.33&times;', '1.67&times;', '2&times;', '2.33&times;', '2.67&times;', '3&times;',\r\n\t\t\t\t];\r\n\t\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t\t}\r\n\t\t\tlet badBoostTable = [\r\n\t\t\t\t'1&times;', '0.75&times;', '0.6&times;', '0.5&times;', '0.43&times;', '0.38&times;', '0.33&times;',\r\n\t\t\t];\r\n\t\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tif (this.boosts[boostStat] > 0) {\r\n\t\t\tlet goodBoostTable = [\r\n\t\t\t\t'1&times;', '1.5&times;', '2&times;', '2.5&times;', '3&times;', '3.5&times;', '4&times;',\r\n\t\t\t];\r\n\t\t\t// let goodBoostTable = ['Normal', '+1', '+2', '+3', '+4', '+5', '+6'];\r\n\t\t\treturn '' + goodBoostTable[this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t\t}\r\n\t\tlet badBoostTable = [\r\n\t\t\t'1&times;', '0.67&times;', '0.5&times;', '0.4&times;', '0.33&times;', '0.29&times;', '0.25&times;',\r\n\t\t];\r\n\t\t// let badBoostTable = ['Normal', '&minus;1', '&minus;2', '&minus;3', '&minus;4', '&minus;5', '&minus;6'];\r\n\t\treturn '' + badBoostTable[-this.boosts[boostStat]] + '&nbsp;' + boostStatTable[boostStat];\r\n\t}\r\n\tgetWeightKg(serverPokemon?: ServerPokemon) {\r\n\t\tlet autotomizeFactor = this.volatiles.autotomize?.[1] * 100 || 0;\r\n\t\treturn Math.max(this.getSpecies(serverPokemon).weightkg - autotomizeFactor, 0.1);\r\n\t}\r\n\tgetBoostType(boostStat: BoostStatName) {\r\n\t\tif (!this.boosts[boostStat]) return 'neutral';\r\n\t\tif (this.boosts[boostStat] > 0) return 'good';\r\n\t\treturn 'bad';\r\n\t}\r\n\tclearVolatile() {\r\n\t\tthis.ability = this.baseAbility;\r\n\t\tthis.boosts = {};\r\n\t\tthis.clearVolatiles();\r\n\t\tfor (let i = 0; i < this.moveTrack.length; i++) {\r\n\t\t\tif (this.moveTrack[i][0].charAt(0) === '*') {\r\n\t\t\t\tthis.moveTrack.splice(i, 1);\r\n\t\t\t\ti--;\r\n\t\t\t}\r\n\t\t}\r\n\t\t// this.lastMove = '';\r\n\t\tthis.statusStage = 0;\r\n\t\tthis.statusData.toxicTurns = 0;\r\n\t\tif (this.side.battle.gen === 5) this.statusData.sleepTurns = 0;\r\n\t}\r\n\t/**\r\n\t * copyAll = false means Baton Pass,\r\n\t * copyAll = true means Illusion breaking\r\n\t * copyAll = 'shedtail' means Shed Tail\r\n\t */\r\n\tcopyVolatileFrom(pokemon: Pokemon, copySource?: | 'shedtail' | boolean) {\r\n\t\tthis.boosts = pokemon.boosts;\r\n\t\tthis.volatiles = pokemon.volatiles;\r\n\t\t// this.lastMove = pokemon.lastMove; // I think\r\n\t\tif (!copySource) {\r\n\t\t\tdelete this.volatiles['airballoon'];\r\n\t\t\tdelete this.volatiles['attract'];\r\n\t\t\tdelete this.volatiles['autotomize'];\r\n\t\t\tdelete this.volatiles['disable'];\r\n\t\t\tdelete this.volatiles['encore'];\r\n\t\t\tdelete this.volatiles['foresight'];\r\n\t\t\tdelete this.volatiles['gmaxchistrike'];\r\n\t\t\tdelete this.volatiles['imprison'];\r\n\t\t\tdelete this.volatiles['laserfocus'];\r\n\t\t\tdelete this.volatiles['mimic'];\r\n\t\t\tdelete this.volatiles['miracleeye'];\r\n\t\t\tdelete this.volatiles['nightmare'];\r\n\t\t\tdelete this.volatiles['smackdown'];\r\n\t\t\tdelete this.volatiles['stockpile1'];\r\n\t\t\tdelete this.volatiles['stockpile2'];\r\n\t\t\tdelete this.volatiles['stockpile3'];\r\n\t\t\tdelete this.volatiles['torment'];\r\n\t\t\tdelete this.volatiles['typeadd'];\r\n\t\t\tdelete this.volatiles['typechange'];\r\n\t\t\tdelete this.volatiles['yawn'];\r\n\t\t}\r\n\t\tif (copySource === 'shedtail') {\r\n\t\t\tfor (let i in this.volatiles) {\r\n\t\t\t\tif (i === 'substitute') continue;\r\n\t\t\t\tdelete this.volatiles[i];\r\n\t\t\t}\r\n\t\t\tthis.boosts = {};\r\n\t\t}\r\n\t\tdelete this.volatiles['transform'];\r\n\t\tdelete this.volatiles['formechange'];\r\n\r\n\t\tpokemon.boosts = {};\r\n\t\tpokemon.volatiles = {};\r\n\t\tpokemon.side.battle.scene.removeTransform(pokemon);\r\n\t\tpokemon.statusStage = 0;\r\n\t}\r\n\tcopyTypesFrom(pokemon: Pokemon, preterastallized = false) {\r\n\t\tconst [types, addedType] = pokemon.getTypes(undefined, preterastallized);\r\n\t\tthis.addVolatile('typechange' as ID, types.join('/'));\r\n\t\tif (addedType) {\r\n\t\t\tthis.addVolatile('typeadd' as ID, addedType);\r\n\t\t} else {\r\n\t\t\tthis.removeVolatile('typeadd' as ID);\r\n\t\t}\r\n\t}\r\n\tgetTypes(serverPokemon?: ServerPokemon, preterastallized = false): [ReadonlyArray<TypeName>, TypeName | ''] {\r\n\t\tlet types: ReadonlyArray<TypeName>;\r\n\t\tif (this.terastallized && !preterastallized) {\r\n\t\t\ttypes = [this.terastallized as TypeName];\r\n\t\t} else if (this.volatiles.typechange) {\r\n\t\t\ttypes = this.volatiles.typechange[1].split('/');\r\n\t\t} else {\r\n\t\t\ttypes = this.getSpecies(serverPokemon).types;\r\n\t\t}\r\n\t\tif (this.hasTurnstatus('roost' as ID) && types.includes('Flying')) {\r\n\t\t\ttypes = types.filter(typeName => typeName !== 'Flying');\r\n\t\t\tif (!types.length) types = ['Normal'];\r\n\t\t}\r\n\t\tconst addedType = (this.volatiles.typeadd ? this.volatiles.typeadd[1] : '');\r\n\t\treturn [types, addedType];\r\n\t}\r\n\tisGrounded(serverPokemon?: ServerPokemon) {\r\n\t\tconst battle = this.side.battle;\r\n\t\tif (battle.hasPseudoWeather('Gravity')) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['ingrain'] && battle.gen >= 4) {\r\n\t\t\treturn true;\r\n\t\t} else if (this.volatiles['smackdown']) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet item = toID(serverPokemon ? serverPokemon.item : this.item);\r\n\t\tlet ability = toID(this.effectiveAbility(serverPokemon));\r\n\t\tif (battle.hasPseudoWeather('Magic Room') || this.volatiles['embargo'] || ability === 'klutz') {\r\n\t\t\titem = '' as ID;\r\n\t\t}\r\n\r\n\t\tif (item === 'ironball') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tif (ability === 'levitate') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (this.volatiles['magnetrise'] || this.volatiles['telekinesis']) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (item === 'airballoon') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn !this.getTypeList(serverPokemon).includes('Flying');\r\n\t}\r\n\teffectiveAbility(serverPokemon?: ServerPokemon) {\r\n\t\tif (this.fainted || this.volatiles['gastroacid']) return '';\r\n\t\tconst ability = this.side.battle.dex.abilities.get(\r\n\t\t\tserverPokemon?.ability || this.ability || serverPokemon?.baseAbility || ''\r\n\t\t);\r\n\t\tif (this.side.battle.ngasActive() && !ability.isPermanent) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn ability.name;\r\n\t}\r\n\tgetTypeList(serverPokemon?: ServerPokemon, preterastallized = false) {\r\n\t\tconst [types, addedType] = this.getTypes(serverPokemon, preterastallized);\r\n\t\treturn addedType ? types.concat(addedType) : types;\r\n\t}\r\n\tgetSpeciesForme(serverPokemon?: ServerPokemon): string {\r\n\t\treturn this.volatiles.formechange ? this.volatiles.formechange[1] :\r\n\t\t\t(serverPokemon ? serverPokemon.speciesForme : this.speciesForme);\r\n\t}\r\n\tgetSpecies(serverPokemon?: ServerPokemon) {\r\n\t\treturn this.side.battle.dex.species.get(this.getSpeciesForme(serverPokemon));\r\n\t}\r\n\tgetBaseSpecies() {\r\n\t\treturn this.side.battle.dex.species.get(this.speciesForme);\r\n\t}\r\n\treset() {\r\n\t\tthis.clearVolatile();\r\n\t\tthis.hp = this.maxhp;\r\n\t\tthis.fainted = false;\r\n\t\tthis.status = '';\r\n\t\tthis.moveTrack = [];\r\n\t\tthis.name = this.name || this.speciesForme;\r\n\t}\r\n\t// This function is used for two things:\r\n\t//   1) The percentage to display beside the HP bar.\r\n\t//   2) The width to draw an HP bar.\r\n\t//\r\n\t// This function is NOT used in the calculation of any other displayed\r\n\t// percentages or ranges, which have their own, more complex, formulae.\r\n\thpWidth(maxWidth: number) {\r\n\t\tif (this.fainted || !this.hp) return 0;\r\n\r\n\t\t// special case for low health...\r\n\t\tif (this.hp === 1 && this.maxhp > 45) return 1;\r\n\r\n\t\tif (this.maxhp === 48) {\r\n\t\t\t// Draw the health bar to the middle of the range.\r\n\t\t\t// This affects the width of the visual health bar *only*; it\r\n\t\t\t// does not affect the ranges displayed in any way.\r\n\t\t\tlet range = Pokemon.getPixelRange(this.hp, this.hpcolor);\r\n\t\t\tlet ratio = (range[0] + range[1]) / 2;\r\n\t\t\treturn Math.round(maxWidth * ratio) || 1;\r\n\t\t}\r\n\t\tlet percentage = Math.ceil(100 * this.hp / this.maxhp);\r\n\t\tif ((percentage === 100) && (this.hp < this.maxhp)) {\r\n\t\t\tpercentage = 99;\r\n\t\t}\r\n\t\treturn percentage * maxWidth / 100;\r\n\t}\r\n\tgetHPText(precision = 1) {\r\n\t\treturn Pokemon.getHPText(this, precision);\r\n\t}\r\n\tstatic getHPText(pokemon: PokemonHealth, precision = 1) {\r\n\t\tif (pokemon.maxhp === 100) return pokemon.hp + '%';\r\n\t\tif (pokemon.maxhp !== 48) return (100 * pokemon.hp / pokemon.maxhp).toFixed(precision) + '%';\r\n\t\tlet range = Pokemon.getPixelRange(pokemon.hp, pokemon.hpcolor);\r\n\t\treturn Pokemon.getFormattedRange(range, precision, '–');\r\n\t}\r\n\tdestroy() {\r\n\t\tif (this.sprite) this.sprite.destroy();\r\n\t\tthis.sprite = null!;\r\n\t\tthis.side = null!;\r\n\t}\r\n}\r\n\r\nexport class Side {\r\n\tbattle: Battle;\r\n\tname = '';\r\n\tid = '';\r\n\tsideid: SideID;\r\n\tn: number;\r\n\tisFar: boolean;\r\n\tfoe: Side = null!;\r\n\tally: Side | null = null;\r\n\tavatar: string = 'unknown';\r\n\trating: string = '';\r\n\ttotalPokemon = 6;\r\n\tx = 0;\r\n\ty = 0;\r\n\tz = 0;\r\n\tmissedPokemon: Pokemon = null!;\r\n\r\n\twisher: Pokemon | null = null;\r\n\r\n\tactive = [null] as (Pokemon | null)[];\r\n\tlastPokemon = null as Pokemon | null;\r\n\tpokemon = [] as Pokemon[];\r\n\r\n\t/** [effectName, levels, minDuration, maxDuration] */\r\n\tsideConditions: {[id: string]: [string, number, number, number]} = {};\r\n\tfaintCounter = 0;\r\n\r\n\tconstructor(battle: Battle, n: number) {\r\n\t\tthis.battle = battle;\r\n\t\tthis.n = n;\r\n\t\tthis.sideid = ['p1', 'p2', 'p3', 'p4'][n] as SideID;\r\n\t\tthis.isFar = !!(n % 2);\r\n\t}\r\n\r\n\trollTrainerSprites() {\r\n\t\tlet sprites = ['lucas', 'dawn', 'ethan', 'lyra', 'hilbert', 'hilda'];\r\n\t\tthis.avatar = sprites[Math.floor(Math.random() * sprites.length)];\r\n\t}\r\n\r\n\tbehindx(offset: number) {\r\n\t\treturn this.x + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehindy(offset: number) {\r\n\t\treturn this.y + (!this.isFar ? 1 : -1) * offset;\r\n\t}\r\n\tleftof(offset: number) {\r\n\t\treturn (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\tbehind(offset: number) {\r\n\t\treturn this.z + (!this.isFar ? -1 : 1) * offset;\r\n\t}\r\n\r\n\tclearPokemon() {\r\n\t\tfor (const pokemon of this.pokemon) pokemon.destroy();\r\n\t\tthis.pokemon = [];\r\n\t\tfor (let i = 0; i < this.active.length; i++) this.active[i] = null;\r\n\t\tthis.lastPokemon = null;\r\n\t}\r\n\treset() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.sideConditions = {};\r\n\t\tthis.faintCounter = 0;\r\n\t}\r\n\tsetAvatar(avatar: string) {\r\n\t\tthis.avatar = avatar;\r\n\t}\r\n\tsetName(name: string, avatar?: string) {\r\n\t\tif (name) this.name = name;\r\n\t\tthis.id = toID(this.name);\r\n\t\tif (avatar) {\r\n\t\t\tthis.setAvatar(avatar);\r\n\t\t} else {\r\n\t\t\tthis.rollTrainerSprites();\r\n\t\t\tif (this.foe && this.avatar === this.foe.avatar) this.rollTrainerSprites();\r\n\t\t}\r\n\t}\r\n\taddSideCondition(effect: Effect, persist: boolean) {\r\n\t\tlet condition = effect.id;\r\n\t\tif (this.sideConditions[condition]) {\r\n\t\t\tif (condition === 'spikes' || condition === 'toxicspikes') {\r\n\t\t\t\tthis.sideConditions[condition][1]++;\r\n\t\t\t}\r\n\t\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Side conditions work as: [effectName, levels, minDuration, maxDuration]\r\n\t\tswitch (condition) {\r\n\t\tcase 'auroraveil':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 8];\r\n\t\t\tbreak;\r\n\t\tcase 'reflect':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'safeguard':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, persist ? 7 : 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'lightscreen':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, this.battle.gen >= 4 ? 8 : 0];\r\n\t\t\tbreak;\r\n\t\tcase 'mist':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'tailwind':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, this.battle.gen >= 5 ? persist ? 6 : 4 : persist ? 5 : 3, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'luckychant':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 5, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'stealthrock':\r\n    case 'stealthcoal':\r\n\t\tcase 'spikes':\r\n    case 'livewire':\r\n    case 'permafrost':\r\n\t\tcase 'toxicspikes':\r\n\t\tcase 'stickyweb':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'gmaxwildfire':\r\n\t\tcase 'gmaxvolcalith':\r\n\t\tcase 'gmaxvinelash':\r\n\t\tcase 'gmaxcannonade':\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'grasspledge':\r\n\t\t\tthis.sideConditions[condition] = ['Swamp', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'waterpledge':\r\n\t\t\tthis.sideConditions[condition] = ['Rainbow', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tcase 'firepledge':\r\n\t\t\tthis.sideConditions[condition] = ['Sea of Fire', 1, 4, 0];\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tthis.sideConditions[condition] = [effect.name, 1, 0, 0];\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.battle.scene.addSideCondition(this.n, condition);\r\n\t}\r\n\tremoveSideCondition(condition: string) {\r\n\t\tconst id = toID(condition);\r\n\t\tif (!this.sideConditions[id]) return;\r\n\t\tdelete this.sideConditions[id];\r\n\t\tthis.battle.scene.removeSideCondition(this.n, id);\r\n\t}\r\n\taddPokemon(name: string, ident: string, details: string, replaceSlot = -1) {\r\n\t\tconst oldItem = replaceSlot >= 0 ? this.pokemon[replaceSlot].item : undefined;\r\n\r\n\t\tconst data = this.battle.parseDetails(name, ident, details);\r\n\t\tconst poke = new Pokemon(data, this);\r\n\t\tif (oldItem) poke.item = oldItem;\r\n\r\n\t\tif (!poke.ability && poke.baseAbility) poke.ability = poke.baseAbility;\r\n\t\tpoke.reset();\r\n\r\n\t\tif (replaceSlot >= 0) {\r\n\t\t\tthis.pokemon[replaceSlot] = poke;\r\n\t\t} else {\r\n\t\t\tthis.pokemon.push(poke);\r\n\t\t}\r\n\t\tif (this.pokemon.length > this.totalPokemon || this.battle.speciesClause) {\r\n\t\t\t// check for Illusion\r\n\t\t\tlet existingTable: {[searchid: string]: number} = {};\r\n\t\t\tlet toRemove = -1;\r\n\t\t\tconst newMegaZor = poke.speciesForme === 'Zoroark-Mega';\r\n\t\t\tfor (let poke1i = 0; poke1i < this.pokemon.length; poke1i++) {\r\n\t\t\t\tlet poke1 = this.pokemon[poke1i];\r\n\t\t\t\tif (!poke1.searchid) {\r\n\t\t\t\t\t//Helps prevent extra Zoroark-Mega icons from appearing in battles with team prieview.\r\n\t\t\t\t\tif (newMegaZor && poke1.speciesForme === 'Zoroark' && poke1.name === poke.name && poke1.level === poke.level && poke1.gender === poke.gender) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t} else continue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/*If a Zoroark mega evolves and its illusion becomes mega evolved, the real Pokémon's icon will become mega evolved,\r\n\t\t\t\t* even after Zoroark-Mega's illusion is broken. If poke1.searchid was used instead of this variable,\r\n\t\t\t\t* switching the real Pokémon in would add an extra icon, making the team appear bigger than it is.*/\r\n\t\t\t\tconst poke1UnMegaSearchId = poke1.searchid.replace('Eevee-Mega', 'Eevee-Tutored-Mega').replace('Sunflora-M-Mega', 'Sunflora-Mega').replace(/-Mega.*?((?=,)|$)/, '')\r\n\t\t\t\tif (poke1UnMegaSearchId in existingTable) {\r\n\t\t\t\t\tlet poke2i = existingTable[poke1UnMegaSearchId];\r\n\t\t\t\t\tlet poke2 = this.pokemon[poke2i];\r\n\t\t\t\t\tif (poke === poke1) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (poke === poke2) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke1) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else if (this.active.indexOf(poke2) >= 0) {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t} else if (poke1.fainted && !poke2.fainted) {\r\n\t\t\t\t\t\ttoRemove = poke2i;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ttoRemove = poke1i;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\texistingTable[poke1UnMegaSearchId] = poke1i;\r\n\t\t\t}\r\n\t\t\tif (toRemove >= 0) {\r\n\t\t\t\tif (this.pokemon[toRemove].fainted) {\r\n\t\t\t\t\t// A fainted Pokemon was actually a Zoroark\r\n\t\t\t\t\tlet illusionFound = null;\r\n\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\tif (curPoke.speciesForme === 'Zoroark' || curPoke.speciesForme === 'Zorua' || curPoke.ability === 'Illusion') {\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!illusionFound) {\r\n\t\t\t\t\t\t// This is Hackmons; we'll just guess a random unfainted Pokemon.\r\n\t\t\t\t\t\t// This will keep the fainted Pokemon count correct, and will\r\n\t\t\t\t\t\t// eventually become correct as incorrect guesses are switched in\r\n\t\t\t\t\t\t// and reguessed.\r\n\t\t\t\t\t\tfor (const curPoke of this.pokemon) {\r\n\t\t\t\t\t\t\tif (curPoke === poke) continue;\r\n\t\t\t\t\t\t\tif (curPoke.fainted) continue;\r\n\t\t\t\t\t\t\tif (this.active.indexOf(curPoke) >= 0) continue;\r\n\t\t\t\t\t\t\tillusionFound = curPoke;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (illusionFound) {\r\n\t\t\t\t\t\tillusionFound.fainted = true;\r\n\t\t\t\t\t\tillusionFound.hp = 0;\r\n\t\t\t\t\t\tillusionFound.status = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.pokemon.splice(toRemove, 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.battle.scene.updateSidebar(this);\r\n\r\n\t\treturn poke;\r\n\t}\r\n\r\n\tswitchIn(pokemon: Pokemon, kwArgs: KWArgs, slot = pokemon.slot) {\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tconst effect = Dex.getEffect(kwArgs.from);\r\n\t\tif (['batonpass', 'zbatonpass', 'shedtail'].includes(effect.id)) {\r\n\t\t\tpokemon.copyVolatileFrom(this.lastPokemon!, effect.id === 'shedtail' ? 'shedtail' : false);\r\n\t\t}\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot);\r\n\t}\r\n\tdragIn(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (oldpokemon === pokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animDragOut(oldpokemon);\r\n\t\t\toldpokemon.clearVolatile();\r\n\t\t}\r\n\t\tpokemon.clearVolatile();\r\n\t\tpokemon.lastMove = '';\r\n\t\tthis.battle.lastMove = 'switch-in';\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tthis.battle.scene.animDragIn(pokemon, slot);\r\n\t}\r\n\treplace(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tlet oldpokemon = this.active[slot];\r\n\t\tif (pokemon === oldpokemon) return;\r\n\t\tthis.lastPokemon = oldpokemon;\r\n\t\tpokemon.clearVolatile();\r\n\t\tif (oldpokemon) {\r\n\t\t\tpokemon.lastMove = oldpokemon.lastMove;\r\n\t\t\tpokemon.hp = oldpokemon.hp;\r\n\t\t\tpokemon.maxhp = oldpokemon.maxhp;\r\n\t\t\tpokemon.hpcolor = oldpokemon.hpcolor;\r\n\t\t\tpokemon.status = oldpokemon.status;\r\n\t\t\tpokemon.copyVolatileFrom(oldpokemon, true);\r\n\t\t\tpokemon.statusData = {...oldpokemon.statusData};\r\n\t\t\t// we don't know anything about the illusioned pokemon except that it's not fainted\r\n\t\t\t// technically we also know its status but only at the end of the turn, not here\r\n\t\t\toldpokemon.fainted = false;\r\n\t\t\toldpokemon.hp = oldpokemon.maxhp;\r\n\t\t\toldpokemon.status = '???';\r\n\t\t}\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tpokemon.slot = slot;\r\n\r\n\t\tif (oldpokemon) {\r\n\t\t\tthis.battle.scene.animUnsummon(oldpokemon, true);\r\n\t\t}\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t}\r\n\tswitchOut(pokemon: Pokemon, kwArgs: KWArgs, slot = pokemon.slot) {\r\n\t\tconst effect = Dex.getEffect(kwArgs.from);\r\n\t\tif (!['batonpass', 'zbatonpass', 'shedtail'].includes(effect.id)) {\r\n\t\t\tpokemon.clearVolatile();\r\n\t\t} else {\r\n\t\t\tpokemon.removeVolatile('transform' as ID);\r\n\t\t\tpokemon.removeVolatile('formechange' as ID);\r\n\t\t}\r\n\t\tif (!['batonpass', 'zbatonpass', 'shedtail', 'teleport'].includes(effect.id)) {\r\n\t\t\tthis.battle.log(['switchout', pokemon.ident], {from: effect.id});\r\n\t\t}\r\n\t\tpokemon.statusData.toxicTurns = 0;\r\n\t\tif (this.battle.gen === 5) pokemon.statusData.sleepTurns = 0;\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon);\r\n\t}\r\n\tswapTo(pokemon: Pokemon, slot: number) {\r\n\t\tif (pokemon.slot === slot) return;\r\n\t\tlet target = this.active[slot];\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\r\n\t\tpokemon.slot = slot;\r\n\t\tif (target) target.slot = oslot;\r\n\r\n\t\tthis.active[slot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tif (target) this.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, slot, true);\r\n\t\tif (target) this.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tswapWith(pokemon: Pokemon, target: Pokemon, kwArgs: KWArgs) {\r\n\t\t// method provided for backwards compatibility only\r\n\t\tif (pokemon === target) return;\r\n\r\n\t\tlet oslot = pokemon.slot;\r\n\t\tlet nslot = target.slot;\r\n\r\n\t\tpokemon.slot = nslot;\r\n\t\ttarget.slot = oslot;\r\n\t\tthis.active[nslot] = pokemon;\r\n\t\tthis.active[oslot] = target;\r\n\r\n\t\tthis.battle.scene.animUnsummon(pokemon, true);\r\n\t\tthis.battle.scene.animUnsummon(target, true);\r\n\r\n\t\tthis.battle.scene.animSummon(pokemon, nslot, true);\r\n\t\tthis.battle.scene.animSummon(target, oslot, true);\r\n\t}\r\n\tfaint(pokemon: Pokemon, slot = pokemon.slot) {\r\n\t\tpokemon.clearVolatile();\r\n\t\tthis.lastPokemon = pokemon;\r\n\t\tthis.active[slot] = null;\r\n\r\n\t\tpokemon.fainted = true;\r\n\t\tpokemon.hp = 0;\r\n\t\tpokemon.terastallized = '';\r\n\t\tif (pokemon.side.faintCounter < 100) pokemon.side.faintCounter++;\r\n\r\n\t\tthis.battle.scene.animFaint(pokemon);\r\n\t}\r\n\tdestroy() {\r\n\t\tthis.clearPokemon();\r\n\t\tthis.battle = null!;\r\n\t\tthis.foe = null!;\r\n\t}\r\n}\r\n\r\nexport interface PokemonDetails {\r\n\tdetails: string;\r\n\tname: string;\r\n\tspeciesForme: string;\r\n\tlevel: number;\r\n\tshiny: boolean;\r\n\tgender: GenderName | '';\r\n\tident: string;\r\n\tsearchid: string;\r\n}\r\nexport interface PokemonHealth {\r\n\thp: number;\r\n\tmaxhp: number;\r\n\thpcolor: HPColor | '';\r\n\tstatus: StatusName | 'tox' | '' | '???';\r\n\tfainted?: boolean;\r\n}\r\nexport interface ServerPokemon extends PokemonDetails, PokemonHealth {\r\n\tident: string;\r\n\tdetails: string;\r\n\tcondition: string;\r\n\tactive: boolean;\r\n\t/** unboosted stats */\r\n\tstats: {\r\n\t\tatk: number,\r\n\t\tdef: number,\r\n\t\tspa: number,\r\n\t\tspd: number,\r\n\t\tspe: number,\r\n\t};\r\n\t/** currently an ID, will revise to name */\r\n\tmoves: string[];\r\n\t/** currently an ID, will revise to name */\r\n\tbaseAbility: string;\r\n\t/** currently an ID, will revise to name */\r\n\tability?: string;\r\n\t/** currently an ID, will revise to name */\r\n\titem: string;\r\n\t/** currently an ID, will revise to name */\r\n\tpokeball: string;\r\n\t/** false if the pokemon cannot gigantamax, otherwise a string containing the full name of its G-max move */\r\n\tgigantamax: string | false;\r\n\t/** always the Tera Type of the Pokemon, regardless of whether it is terastallized or not */\r\n\tteraType: string;\r\n\t/** falsy if the pokemon is not terastallized, otherwise it is the Tera Type of the Pokemon */\r\n\tterastallized: string;\r\n}\r\n\r\nexport class Battle {\r\n\tscene: BattleSceneStub;\r\n\r\n\tsidesSwitched = false;\r\n\r\n\tstepQueue: string[];\r\n\t/** See battle.instantAdd */\r\n\tpreemptStepQueue: string[] = [];\r\n\twaitForAnimations: true | false | 'simult' = true;\r\n\t/** the index of `stepQueue` currently being animated */\r\n\tcurrentStep = 0;\r\n\t/** null = not seeking, 0 = seek start, Infinity = seek end, otherwise: seek turn number */\r\n\tseeking: number | null = null;\r\n\r\n\tactiveMoveIsSpread: string | null = null;\r\n\r\n\tsubscription: ((state:\r\n\t\t'playing' | 'paused' | 'turn' | 'atqueueend' | 'callback' | 'ended' | 'error'\r\n\t) => void) | null;\r\n\r\n\tmute = false;\r\n\tmessageFadeTime = 300;\r\n\tmessageShownTime = 1;\r\n\t/** for tracking when to accelerate animations in long battles full of double switches */\r\n\tturnsSinceMoved = 0;\r\n\r\n\t/**\r\n\t * * `-1` = non-battle RoomGames, or hasn't hit Team Preview or `|start`\r\n\t * * `0` = after Team Preview or `|start` but before `|turn|1`\r\n\t */\r\n\tturn = -1;\r\n\t/**\r\n\t * Are we at the end of the queue and waiting for more input?\r\n\t *\r\n\t * In addition to at the end of a battle, this is also true if you're\r\n\t * playing/watching a battle live, and waiting for a player to make a move.\r\n\t */\r\n\tatQueueEnd = false;\r\n\t/**\r\n\t * Has the battle ever been played or fast-forwarded?\r\n\t *\r\n\t * This is not exactly `turn > 0` because if you start playing a replay,\r\n\t * then pause before turn 1, `turn` will still be 0, but playback should\r\n\t * be considered started (for the purposes of displaying \"Play\" vs \"Resume\")\r\n\t */\r\n\tstarted = false;\r\n\t/**\r\n\t * Has playback gotten to the point where a player has won or tied?\r\n\t * (Affects whether BGM is playing)\r\n\t */\r\n\tended = false;\r\n\tisReplay = false;\r\n\tusesUpkeep = false;\r\n\tweather = '' as ID;\r\n\tpseudoWeather = [] as WeatherState[];\r\n\tweatherTimeLeft = 0;\r\n\tweatherMinTimeLeft = 0;\r\n\t/**\r\n\t * The side from which perspective we're viewing. Should be identical to\r\n\t * `nearSide` except in multi battles, where `nearSide` is always the first\r\n\t * near side, and `mySide` is the active player.\r\n\t */\r\n\tmySide: Side = null!;\r\n\tnearSide: Side = null!;\r\n\tfarSide: Side = null!;\r\n\tp1: Side = null!;\r\n\tp2: Side = null!;\r\n\tp3?: Side = null!;\r\n\tp4?: Side = null!;\r\n\tpokemonControlled = 0;\r\n\tsides: Side[] = null!;\r\n\tmyPokemon: ServerPokemon[] | null = null;\r\n\tmyAllyPokemon: ServerPokemon[] | null = null;\r\n\tlastMove = '';\r\n\r\n\tgen = 8;\r\n\tdex: ModdedDex = Dex;\r\n\tteamPreviewCount = 0;\r\n\tspeciesClause = false;\r\n\ttier = '';\r\n\tgameType: 'singles' | 'doubles' | 'triples' | 'multi' | 'freeforall' = 'singles';\r\n\trated: string | boolean = false;\r\n\trules: {[ruleName: string]: 1 | 0} = {};\r\n\tisBlitz = false;\r\n\tendLastTurnPending = false;\r\n\ttotalTimeLeft = 0;\r\n\tgraceTimeLeft = 0;\r\n\t/**\r\n\t * true: timer on, state unknown\r\n\t * false: timer off\r\n\t * number: seconds left this turn\r\n\t */\r\n\tkickingInactive: number | boolean = false;\r\n\r\n\t// options\r\n\tid = '';\r\n\t/** used to forward some information to the room in the old client */\r\n\troomid = '';\r\n\thardcoreMode = false;\r\n\tignoreNicks = !!Dex.prefs('ignorenicks');\r\n\tignoreOpponent = !!Dex.prefs('ignoreopp');\r\n\tignoreSpects = !!Dex.prefs('ignorespects');\r\n\tdebug: boolean;\r\n\tjoinButtons = false;\r\n\r\n\t/**\r\n\t * The actual pause state. Will only be true if playback is actually\r\n\t * paused, not just waiting for the opponent to make a move.\r\n\t */\r\n\tpaused: boolean;\r\n\r\n\tconstructor(options: {\r\n\t\t$frame?: JQuery<HTMLElement>,\r\n\t\t$logFrame?: JQuery<HTMLElement>,\r\n\t\tid?: ID,\r\n\t\tlog?: string[],\r\n\t\tpaused?: boolean,\r\n\t\tisReplay?: boolean,\r\n\t\tdebug?: boolean,\r\n\t\tsubscription?: Battle['subscription'],\r\n\t} = {}) {\r\n\t\tthis.id = options.id || '';\r\n\r\n\t\tif (options.$frame && options.$logFrame) {\r\n\t\t\tthis.scene = new BattleScene(this, options.$frame, options.$logFrame);\r\n\t\t} else if (!options.$frame && !options.$logFrame) {\r\n\t\t\tthis.scene = new BattleSceneStub();\r\n\t\t} else {\r\n\t\t\tthrow new Error(`You must specify $frame and $logFrame simultaneously`);\r\n\t\t}\r\n\r\n\t\tthis.paused = !!options.paused;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.debug = !!options.debug;\r\n\t\tthis.stepQueue = options.log || [];\r\n\t\tthis.subscription = options.subscription || null;\r\n\r\n\t\tthis.p1 = new Side(this, 0);\r\n\t\tthis.p2 = new Side(this, 1);\r\n\t\tthis.sides = [this.p1, this.p2];\r\n\t\tthis.p2.foe = this.p1;\r\n\t\tthis.p1.foe = this.p2;\r\n\t\tthis.nearSide = this.mySide = this.p1;\r\n\t\tthis.farSide = this.p2;\r\n\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsubscribe(listener: Battle['subscription']) {\r\n\t\tthis.subscription = listener;\r\n\t}\r\n\r\n\tremovePseudoWeather(weather: string) {\r\n\t\tfor (let i = 0; i < this.pseudoWeather.length; i++) {\r\n\t\t\tif (this.pseudoWeather[i][0] === weather) {\r\n\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\taddPseudoWeather(weather: string, minTimeLeft: number, timeLeft: number) {\r\n\t\tthis.pseudoWeather.push([weather, minTimeLeft, timeLeft]);\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\thasPseudoWeather(weather: string) {\r\n\t\tfor (const [pseudoWeatherName] of this.pseudoWeather) {\r\n\t\t\tif (weather === pseudoWeatherName) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tgetAllActive() {\r\n\t\tconst pokemonList = [];\r\n\t\t// Sides 3 and 4 are synced with sides 1 and 2, so they don't need to be checked\r\n\t\tfor (let i = 0; i < 2; i++) {\r\n\t\t\tconst side = this.sides[i];\r\n\t\t\tfor (const active of side.active) {\r\n\t\t\t\tif (active && !active.fainted) {\r\n\t\t\t\t\tpokemonList.push(active);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn pokemonList;\r\n\t}\r\n\tngasActive() {\r\n\t\tfor (const active of this.getAllActive()) {\r\n\t\t\tif (active.ability === 'Neutralizing Gas' && !active.volatiles['gastroacid']) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tabilityActive(abilities: string | string[], excludePokemon?: Pokemon | ServerPokemon | null) {\r\n\t\tif (typeof abilities === 'string') abilities = [abilities];\r\n\t\tif (this.ngasActive()) {\r\n\t\t\tabilities = abilities.filter(a => this.dex.abilities.get(a).isPermanent);\r\n\t\t\tif (!abilities.length) return false;\r\n\t\t}\r\n\t\tfor (const active of this.getAllActive()) {\r\n\t\t\tif (active === excludePokemon) continue;\r\n\t\t\tif (excludePokemon && this.pokemonControlled === 1 &&\r\n\t\t\t\tactive.ident.slice(0, 2) === excludePokemon.ident.slice(0, 2)) {\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif (abilities.includes(active.ability) && !active.volatiles['gastroacid']) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\treset() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.resetStep();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\tresetStep() {\r\n\t\t// battle state\r\n\t\tthis.turn = -1;\r\n\t\tthis.started = !this.paused;\r\n\t\tthis.ended = false;\r\n\t\tthis.atQueueEnd = false;\r\n\t\tthis.weather = '' as ID;\r\n\t\tthis.weatherTimeLeft = 0;\r\n\t\tthis.weatherMinTimeLeft = 0;\r\n\t\tthis.pseudoWeather = [];\r\n\t\tthis.lastMove = '';\r\n\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tif (side) side.reset();\r\n\t\t}\r\n\t\tthis.myPokemon = null;\r\n\t\tthis.myAllyPokemon = null;\r\n\r\n\t\t// DOM state\r\n\t\tthis.scene.reset();\r\n\r\n\t\t// activity queue state\r\n\t\tthis.activeMoveIsSpread = null;\r\n\t\tthis.currentStep = 0;\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t\tthis.nextStep();\r\n\t}\r\n\tdestroy() {\r\n\t\tthis.scene.destroy();\r\n\r\n\t\tfor (let i = 0; i < this.sides.length; i++) {\r\n\t\t\tif (this.sides[i]) this.sides[i].destroy();\r\n\t\t\tthis.sides[i] = null!;\r\n\t\t}\r\n\t\tthis.mySide = null!;\r\n\t\tthis.nearSide = null!;\r\n\t\tthis.farSide = null!;\r\n\t\tthis.p1 = null!;\r\n\t\tthis.p2 = null!;\r\n\t\tthis.p3 = null!;\r\n\t\tthis.p4 = null!;\r\n\t}\r\n\r\n\tlog(args: Args, kwArgs?: KWArgs, preempt?: boolean) {\r\n\t\tthis.scene.log.add(args, kwArgs, preempt);\r\n\t}\r\n\r\n\tresetToCurrentTurn() {\r\n\t\tthis.seekTurn(this.ended ? Infinity : this.turn, true);\r\n\t}\r\n\tswitchSides() {\r\n\t\tthis.setPerspective(this.sidesSwitched ? 'p1' : 'p2');\r\n\t}\r\n\tsetPerspective(sideid: SideID) {\r\n\t\tif (this.mySide.sideid === sideid) return;\r\n\t\tif (sideid.length !== 2 || !sideid.startsWith('p')) return;\r\n\t\tconst side = this[sideid];\r\n\t\tif (!side) return;\r\n\t\tthis.mySide = side;\r\n\r\n\t\tif ((side.n % 2) === this.p1.n) {\r\n\t\t\tthis.sidesSwitched = false;\r\n\t\t\tthis.nearSide = this.p1;\r\n\t\t\tthis.farSide = this.p2;\r\n\t\t} else {\r\n\t\t\tthis.sidesSwitched = true;\r\n\t\t\tthis.nearSide = this.p2;\r\n\t\t\tthis.farSide = this.p1;\r\n\t\t}\r\n\t\tthis.nearSide.isFar = false;\r\n\t\tthis.farSide.isFar = true;\r\n\t\tif (this.sides.length > 2) {\r\n\t\t\tthis.sides[this.nearSide.n + 2].isFar = false;\r\n\t\t\tthis.sides[this.farSide.n + 2].isFar = true;\r\n\t\t}\r\n\r\n\t\tthis.resetToCurrentTurn();\r\n\t}\r\n\r\n\t//\r\n\t// activities\r\n\t//\r\n\tstart() {\r\n\t\tthis.log(['start']);\r\n\t\tthis.resetTurnsSinceMoved();\r\n\t}\r\n\twinner(winner?: string) {\r\n\t\tthis.log(['win', winner || '']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tprematureEnd() {\r\n\t\tthis.log(['message', 'This replay ends here.']);\r\n\t\tthis.ended = true;\r\n\t\tthis.subscription?.('ended');\r\n\t}\r\n\tendLastTurn() {\r\n\t\tif (this.endLastTurnPending) {\r\n\t\t\tthis.endLastTurnPending = false;\r\n\t\t\tthis.scene.updateStatbars();\r\n\t\t}\r\n\t}\r\n\tsetHardcoreMode(mode: boolean) {\r\n\t\tthis.hardcoreMode = mode;\r\n\t\tthis.scene.updateSidebars();\r\n\t\tthis.scene.updateWeather(true);\r\n\t}\r\n\tsetTurn(turnNum: number) {\r\n\t\tif (turnNum === this.turn + 1) {\r\n\t\t\tthis.endLastTurnPending = true;\r\n\t\t}\r\n\t\tif (this.turn && !this.usesUpkeep) this.updateTurnCounters(); // for compatibility with old replays\r\n\t\tthis.turn = turnNum;\r\n\t\tthis.started = true;\r\n\r\n\t\tif (this.seeking === null) this.turnsSinceMoved++;\r\n\r\n\t\tthis.scene.incrementTurn();\r\n\r\n\t\tif (this.seeking !== null) {\r\n\t\t\tif (turnNum >= this.seeking) {\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tthis.subscription?.('turn');\r\n\t\t}\r\n\t}\r\n\tresetTurnsSinceMoved() {\r\n\t\tthis.turnsSinceMoved = 0;\r\n\t\tthis.scene.updateAcceleration();\r\n\t}\r\n\tchangeWeather(weatherName: string, poke?: Pokemon, isUpkeep?: boolean, ability?: Effect) {\r\n\t\tlet weather = toID(weatherName);\r\n\t\tif (!weather || weather === 'none') {\r\n\t\t\tweather = '' as ID;\r\n\t\t}\r\n\t\tif (isUpkeep) {\r\n\t\t\tif (this.weather && this.weatherTimeLeft) {\r\n\t\t\t\tthis.weatherTimeLeft--;\r\n\t\t\t\tif (this.weatherMinTimeLeft !== 0) this.weatherMinTimeLeft--;\r\n\t\t\t}\r\n\t\t\tif (this.seeking === null) {\r\n\t\t\t\tthis.scene.upkeepWeather();\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (weather) {\r\n\t\t\tlet isExtremeWeather = (weather === 'deltastream' || weather === 'desolateland' || weather === 'primordialsea');\r\n\t\t\tif (poke) {\r\n\t\t\t\tif (ability) {\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t}\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 8;\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 5 || isExtremeWeather) ? 0 : 5;\r\n\t\t\t} else if (isExtremeWeather) {\r\n\t\t\t\tthis.weatherTimeLeft = 0;\r\n\t\t\t\tthis.weatherMinTimeLeft = 0;\r\n\t\t\t} else {\r\n\t\t\t\tthis.weatherTimeLeft = (this.gen <= 3 ? 5 : 8);\r\n\t\t\t\tthis.weatherMinTimeLeft = (this.gen <= 3 ? 0 : 5);\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.weather = weather;\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tswapSideConditions() {\r\n\t\tconst sideConditions = [\r\n\t\t\t'mist', 'lightscreen', 'reflect', 'spikes', 'safeguard', 'tailwind', 'toxicspikes', 'stealthrock', 'stealthcoal', 'livewire', 'permafrost', 'waterpledge', 'firepledge', 'grasspledge', 'stickyweb', 'auroraveil', 'gmaxsteelsurge', 'gmaxcannonade', 'gmaxvinelash', 'gmaxwildfire',\r\n\t\t];\r\n\t\tif (this.gameType === 'freeforall') {\r\n\t\t\t// TODO: Add FFA support\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\tlet side1 = this.sides[0];\r\n\t\t\tlet side2 = this.sides[1];\r\n\t\t\tfor (const id of sideConditions) {\r\n\t\t\t\tif (side1.sideConditions[id] && side2.sideConditions[id]) {\r\n\t\t\t\t\t[side1.sideConditions[id], side2.sideConditions[id]] = [\r\n\t\t\t\t\t\tside2.sideConditions[id], side1.sideConditions[id],\r\n\t\t\t\t\t];\r\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\r\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\r\n\t\t\t\t} else if (side1.sideConditions[id] && !side2.sideConditions[id]) {\r\n\t\t\t\t\tside2.sideConditions[id] = side1.sideConditions[id];\r\n\t\t\t\t\tthis.scene.addSideCondition(side2.n, id as ID);\r\n\t\t\t\t\tside1.removeSideCondition(id);\r\n\t\t\t\t} else if (side2.sideConditions[id] && !side1.sideConditions[id]) {\r\n\t\t\t\t\tside1.sideConditions[id] = side2.sideConditions[id];\r\n\t\t\t\t\tthis.scene.addSideCondition(side1.n, id as ID);\r\n\t\t\t\t\tside2.removeSideCondition(id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tupdateTurnCounters() {\r\n\t\tfor (const pWeather of this.pseudoWeather) {\r\n\t\t\tif (pWeather[1]) pWeather[1]--;\r\n\t\t\tif (pWeather[2]) pWeather[2]--;\r\n\t\t}\r\n\t\tfor (const side of this.sides) {\r\n\t\t\tfor (const id in side.sideConditions) {\r\n\t\t\t\tlet cond = side.sideConditions[id];\r\n\t\t\t\tif (cond[2]) cond[2]--;\r\n\t\t\t\tif (cond[3]) cond[3]--;\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor (const poke of [...this.nearSide.active, ...this.farSide.active]) {\r\n\t\t\tif (poke) {\r\n\t\t\t\tif (poke.status === 'tox') poke.statusData.toxicTurns++;\r\n\t\t\t\tpoke.clearTurnstatuses();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.scene.updateWeather();\r\n\t}\r\n\tuseMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\tthis.activateAbility(pokemon, fromeffect);\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tif (move.id === 'focuspunch') {\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t}\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (fromeffect.id === 'sleeptalk') {\r\n\t\t\tpokemon.rememberMove(move.name, 0);\r\n\t\t}\r\n\t\tlet callerMoveForPressure = null;\r\n\t\t// will not include effects that are conditions named after moves like Magic Coat and Snatch, which is good\r\n\t\tif (fromeffect.id && kwArgs.from.startsWith(\"move:\")) {\r\n\t\t\tcallerMoveForPressure = fromeffect as Move;\r\n\t\t}\r\n\t\tif (!fromeffect.id || callerMoveForPressure || fromeffect.id === 'pursuit') {\r\n\t\t\tlet moveName = move.name;\r\n\t\t\tif (!callerMoveForPressure) {\r\n\t\t\t\tif (move.isZ) {\r\n\t\t\t\t\tpokemon.item = move.isZ;\r\n\t\t\t\t\tlet item = Dex.items.get(move.isZ);\r\n\t\t\t\t\tif (item.zMoveFrom) moveName = item.zMoveFrom;\r\n\t\t\t\t} else if (move.name.slice(0, 2) === 'Z-') {\r\n\t\t\t\t\tmoveName = moveName.slice(2);\r\n\t\t\t\t\tmove = Dex.moves.get(moveName);\r\n\t\t\t\t\tif (window.BattleItems) {\r\n\t\t\t\t\t\tfor (let item in BattleItems) {\r\n\t\t\t\t\t\t\tif (BattleItems[item].zMoveType === move.type) pokemon.item = item;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet pp = 1;\r\n\t\t\tif (this.abilityActive('Pressure') && move.id !== 'stickyweb') {\r\n\t\t\t\tconst foeTargets = [];\r\n\t\t\t\tconst moveTarget = move.pressureTarget;\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\t!target && this.gameType === 'singles' &&\r\n\t\t\t\t\t!['self', 'allies', 'allySide', 'adjacentAlly', 'adjacentAllyOrSelf', 'allyTeam'].includes(moveTarget)\r\n\t\t\t\t) {\r\n\t\t\t\t\t// Hardcode for moves without a target in singles\r\n\t\t\t\t\tfoeTargets.push(pokemon.side.foe.active[0]);\r\n\t\t\t\t} else if (['all', 'allAdjacent', 'allAdjacentFoes', 'foeSide'].includes(moveTarget)) {\r\n\t\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\t\tif (active === pokemon) continue;\r\n\t\t\t\t\t\t// Pressure affects allies in gen 3 and 4\r\n\t\t\t\t\t\tif (this.gen <= 4 || (active.side !== pokemon.side && active.side.ally !== pokemon.side)) {\r\n\t\t\t\t\t\t\tfoeTargets.push(active);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (target && target.side !== pokemon.side) {\r\n\t\t\t\t\tfoeTargets.push(target);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (const foe of foeTargets) {\r\n\t\t\t\t\tif (foe && !foe.fainted && foe.effectiveAbility() === 'Pressure') {\r\n\t\t\t\t\t\tpp += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!callerMoveForPressure) {\r\n\t\t\t\tpokemon.rememberMove(moveName, pp);\r\n\t\t\t} else {\r\n\t\t\t\tpokemon.rememberMove(callerMoveForPressure.name, pp - 1); // 1 pp was already deducted from using the move itself\r\n\t\t\t}\r\n\t\t}\r\n\t\tpokemon.lastMove = move.id;\r\n\t\tthis.lastMove = move.id;\r\n\t\tif (move.id === 'wish' || move.id === 'healingwish') {\r\n\t\t\tpokemon.side.wisher = pokemon;\r\n\t\t}\r\n\t}\r\n\tanimateMove(pokemon: Pokemon, move: Move, target: Pokemon | null, kwArgs: KWArgs) {\r\n\t\tthis.activeMoveIsSpread = kwArgs.spread;\r\n\t\tif (this.seeking !== null || kwArgs.still) return;\r\n\r\n\t\tif (!target) target = pokemon.side.foe.active[0];\r\n\t\tif (!target) target = pokemon.side.foe.missedPokemon;\r\n\t\tif (kwArgs.miss && target.side) {\r\n\t\t\ttarget = target.side.missedPokemon;\r\n\t\t}\r\n\t\tif (kwArgs.notarget) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (kwArgs.prepare || kwArgs.anim === 'prepare') {\r\n\t\t\tthis.scene.runPrepareAnim(move.id, pokemon, target);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet usedMove = kwArgs.anim ? Dex.moves.get(kwArgs.anim) : move;\r\n\t\tif (!kwArgs.spread) {\r\n\t\t\tthis.scene.runMoveAnim(usedMove.id, [pokemon, target]);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet targets = [pokemon];\r\n\t\tif (kwArgs.spread === '.') {\r\n\t\t\t//  no target was hit by the attack\r\n\t\t\ttargets.push(target.side.missedPokemon);\r\n\t\t} else {\r\n\t\t\tfor (const hitTarget of kwArgs.spread.split(',')) {\r\n\t\t\t\tconst curTarget = this.getPokemon(hitTarget + ': ?');\r\n\t\t\t\tif (!curTarget) {\r\n\t\t\t\t\tthis.log(['error', `Invalid spread move target: \"${hitTarget}\"`]);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t\ttargets.push(curTarget);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.scene.runMoveAnim(usedMove.id, targets);\r\n\t}\r\n\tcantUseMove(pokemon: Pokemon, effect: Effect, move: Move, kwArgs: KWArgs) {\r\n\t\tpokemon.clearMovestatuses();\r\n\t\tthis.scene.updateStatbar(pokemon);\r\n\t\tif (effect.id in BattleStatusAnims) {\r\n\t\t\tthis.scene.runStatusAnim(effect.id, [pokemon]);\r\n\t\t}\r\n\t\tthis.activateAbility(pokemon, effect);\r\n\t\tif (move.id) pokemon.rememberMove(move.name, 0);\r\n\t\tswitch (effect.id) {\r\n\t\tcase 'par':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Paralyzed', 'par');\r\n\t\t\tbreak;\r\n\t\tcase 'frz':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Frozen', 'frz');\r\n\t\t\tbreak;\r\n\t\tcase 'slp':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Asleep', 'slp');\r\n\t\t\tpokemon.statusData.sleepTurns++;\r\n\t\t\tbreak;\r\n\t\tcase 'truant':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Loafing around', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'recharge':\r\n\t\t\tthis.scene.runOtherAnim('selfstatus' as ID, [pokemon]);\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Must recharge', 'neutral');\r\n\t\t\tbreak;\r\n\t\tcase 'focuspunch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Lost focus', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'shelltrap':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Trap failed', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('shelltrap' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'flinch':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Flinched', 'neutral');\r\n\t\t\tpokemon.removeTurnstatus('focuspunch' as ID);\r\n\t\t\tbreak;\r\n\t\tcase 'attract':\r\n\t\t\tthis.scene.resultAnim(pokemon, 'Immobilized', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tthis.scene.animReset(pokemon);\r\n\t}\r\n\r\n\tactivateAbility(pokemon: Pokemon | null, effectOrName: Effect | string, isNotBase?: boolean) {\r\n\t\tif (!pokemon || !effectOrName) return;\r\n\t\tif (typeof effectOrName !== 'string') {\r\n\t\t\tif (effectOrName.effectType !== 'Ability') return;\r\n\t\t\teffectOrName = effectOrName.name;\r\n\t\t}\r\n\t\tthis.scene.abilityActivateAnim(pokemon, effectOrName);\r\n\t\tpokemon.rememberAbility(effectOrName, isNotBase);\r\n\t}\r\n\r\n\trunMinor(args: Args, kwArgs: KWArgs, nextArgs?: Args, nextKwargs?: KWArgs) {\r\n\t\tif (nextArgs && nextKwargs) {\r\n\t\t\tif (args[2] === 'Sturdy' && args[0] === '-activate') {\r\n\t\t\t\targs[2] = 'ability: Sturdy';\r\n\t\t\t}\r\n\t\t\tif (['-crit', '-supereffective', '-resisted'].includes(args[0]) || args[2] === 'ability: Sturdy') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && !kwArgs.from && args[1] !== nextArgs[1] && (\r\n\t\t\t\t['-crit', '-supereffective', '-resisted'].includes(nextArgs[0]) ||\r\n\t\t\t\t(nextArgs[0] === '-damage' && !nextKwargs.from)\r\n\t\t\t)) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && nextArgs[0] === '-damage' && kwArgs.from && kwArgs.from === nextKwargs.from) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-ability' && (args[2] === 'Intimidate' || args[3] === 'boost')) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-unboost' && nextArgs[0] === '-unboost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-boost' && nextArgs[0] === '-boost') {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === '-damage' && kwArgs.from === 'Leech Seed' && nextArgs[0] === '-heal' && nextKwargs.silent) {\r\n\t\t\t\tkwArgs.then = '.';\r\n\t\t\t}\r\n\t\t\tif (args[0] === 'detailschange' && nextArgs[0] === '-mega') {\r\n\t\t\t\tif (this.scene.closeMessagebar()) {\r\n\t\t\t\t\tthis.currentStep--;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tkwArgs.simult = '.';\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (kwArgs.then) this.waitForAnimations = false;\r\n\t\tif (kwArgs.simult) this.waitForAnimations = 'simult';\r\n\r\n\t\tconst CONSUMED = ['eaten', 'popped', 'consumed', 'held up'];\r\n\t\tswitch (args[0]) {\r\n\t\tcase '-damage': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\t\tconst itemPoke = ofpoke || poke;\r\n\t\t\t\t\tif (itemPoke.prevItem !== effect.name && !CONSUMED.includes(itemPoke.prevItemEffect)) {\r\n\t\t\t\t\t\titemPoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'baddreams':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'curse':\r\n\t\t\t\t\tthis.scene.runStatusAnim('cursed' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.runStatusAnim('confusedselfhit' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tthis.scene.runOtherAnim('leech' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bind':\r\n\t\t\t\tcase 'wrap':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bound' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this.dex.moves.get(this.lastMove).category !== 'Status') {\r\n\t\t\t\t\tpoke.timesAttacked++;\r\n\t\t\t\t}\r\n\t\t\t\tlet damageinfo = '' + Pokemon.getFormattedRange(range, damage[1] === 100 ? 0 : 1, '\\u2013');\r\n\t\t\t\tif (damage[1] !== 100) {\r\n\t\t\t\t\tlet hover = '' + ((damage[0] < 0) ? '\\u2212' : '') +\r\n\t\t\t\t\t\tMath.abs(damage[0]) + '/' + damage[1];\r\n\t\t\t\t\tif (damage[1] === 48) { // this is a hack\r\n\t\t\t\t\t\thover += ' pixels';\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// battle-log will convert this into <abbr>\r\n\t\t\t\t\tdamageinfo = '||' + hover + '||' + damageinfo + '||';\r\n\t\t\t\t}\r\n\t\t\t\targs[3] = damageinfo;\r\n\t\t\t}\r\n\t\t\tthis.scene.damageAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-heal': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet damage = poke.healthParse(args[2], true, true);\r\n\t\t\tif (damage === null) break;\r\n\t\t\tlet range = poke.getDamageRange(damage);\r\n\r\n\t\t\tif (kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t\tif (effect.effectType === 'Item' && !CONSUMED.includes(poke.prevItemEffect)) {\r\n\t\t\t\t\tif (poke.prevItem !== effect.name) {\r\n\t\t\t\t\t\tpoke.item = effect.name;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'lunardance':\r\n\t\t\t\t\tfor (let trackedMove of poke.moveTrack) {\r\n\t\t\t\t\t\ttrackedMove[1] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'healingwish':\r\n\t\t\t\t\tthis.lastMove = 'healing-wish';\r\n\t\t\t\t\tthis.scene.runResidualAnim('healingwish' as ID, poke);\r\n\t\t\t\t\tpoke.side.wisher = null;\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\r\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'wish':\r\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'revivalblessing':\r\n\t\t\t\t\tthis.scene.runResidualAnim('wish' as ID, poke);\r\n\t\t\t\t\tconst {siden} = this.parsePokemonId(args[1]);\r\n\t\t\t\t\tconst side = this.sides[siden];\r\n\t\t\t\t\tpoke.fainted = false;\r\n\t\t\t\t\tpoke.status = '';\r\n\t\t\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.runOtherAnim('heal' as ID, [poke]);\r\n\t\t\tthis.scene.healAnim(poke, Pokemon.getFormattedRange(range, 0, ' to '));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sethp': {\r\n\t\t\tfor (let k = 0; k < 2; k++) {\r\n\t\t\t\tlet cpoke = this.getPokemon(args[1 + 2 * k]);\r\n\t\t\t\tif (cpoke) {\r\n\t\t\t\t\tlet damage = cpoke.healthParse(args[2 + 2 * k])!;\r\n\t\t\t\t\tlet range = cpoke.getDamageRange(damage);\r\n\t\t\t\t\tlet formattedRange = Pokemon.getFormattedRange(range, 0, ' to ');\r\n\t\t\t\t\tlet diff = damage[0];\r\n\t\t\t\t\tif (diff > 0) {\r\n\t\t\t\t\t\tthis.scene.healAnim(cpoke, formattedRange);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.scene.damageAnim(cpoke, formattedRange);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-boost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] += amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tif (!(effect.id === 'weakarmor' && stat === 'spe')) {\r\n\t\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-unboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tif (this.gen === 1 && stat === 'spd') break;\r\n\t\t\tif (this.gen === 1 && stat === 'spa') stat = 'spc';\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tif (amount === 0) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'already ' + poke.getBoost(stat), 'neutral');\r\n\t\t\t\tthis.log(args, kwArgs);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!poke.boosts[stat]) {\r\n\t\t\t\tpoke.boosts[stat] = 0;\r\n\t\t\t}\r\n\t\t\tpoke.boosts[stat] -= amount;\r\n\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), 'bad');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-setboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet stat = args[2] as BoostStatName;\r\n\t\t\tlet amount = parseInt(args[3], 10);\r\n\t\t\tpoke.boosts[stat] = amount;\r\n\t\t\tthis.scene.resultAnim(poke, poke.getBoost(stat), (amount > 0 ? 'good' : 'bad'));\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-swapboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet poke2 = this.getPokemon(args[2])!;\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tlet tmp = poke.boosts[stat];\r\n\t\t\t\tpoke.boosts[stat] = poke2.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t\tpoke2.boosts[stat] = tmp;\r\n\t\t\t\tif (!poke2.boosts[stat]) delete poke2.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats swapped', 'neutral');\r\n\t\t\tthis.scene.resultAnim(poke2, 'Stats swapped', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearpositiveboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(args[3]);\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] > 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Boosts lost', 'bad');\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'spectralthief':\r\n\t\t\t\t\t// todo: update StealBoosts so it animates 1st on Spectral Thief\r\n\t\t\t\t\tthis.scene.runOtherAnim('spectralthiefboost' as ID, [ofpoke!, poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearnegativeboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tif (poke.boosts[stat] < 0) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Restored', 'good');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-copyboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet frompoke = this.getPokemon(args[2])!;\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t}\r\n\t\t\tlet stats = args[3] ? args[3].split(', ') : ['atk', 'def', 'spa', 'spd', 'spe', 'accuracy', 'evasion'];\r\n\t\t\tfor (const stat of stats) {\r\n\t\t\t\tpoke.boosts[stat] = frompoke.boosts[stat];\r\n\t\t\t\tif (!poke.boosts[stat]) delete poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tif (this.gen >= 6) {\r\n\t\t\t\tconst volatilesToCopy = ['focusenergy', 'gmaxchistrike', 'laserfocus'];\r\n\t\t\t\tfor (const volatile of volatilesToCopy) {\r\n\t\t\t\t\tif (frompoke.volatiles[volatile]) {\r\n\t\t\t\t\t\tpoke.addVolatile(volatile as ID);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpoke.removeVolatile(volatile as ID);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats copied', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.boosts = {};\r\n\t\t\tif (!kwArgs.silent && kwArgs.from) {\r\n\t\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats reset', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-invertboost': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const stat in poke.boosts) {\r\n\t\t\t\tpoke.boosts[stat] = -poke.boosts[stat];\r\n\t\t\t}\r\n\t\t\tthis.scene.resultAnim(poke, 'Stats inverted', 'neutral');\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-clearallboost': {\r\n\t\t\tlet timeOffset = this.scene.timeOffset;\r\n\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\tactive.boosts = {};\r\n\t\t\t\tthis.scene.timeOffset = timeOffset;\r\n\t\t\t\tthis.scene.resultAnim(active, 'Stats reset', 'neutral');\r\n\t\t\t}\r\n\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-crit': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Critical hit', 'bad');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-supereffective': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) {\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Super-effective', 'bad');\r\n\t\t\t\tif (window.Config?.server?.afd) {\r\n\t\t\t\t\tthis.scene.runOtherAnim('hitmark' as ID, [poke]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-resisted': {\r\n\t\t\tlet poke = this.getPokemon(args[1]);\r\n\t\t\tif (poke) this.scene.resultAnim(poke, 'Resisted', 'neutral');\r\n\t\t\tif (this.activeMoveIsSpread) kwArgs.spread = '.';\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-immune': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(this.getPokemon(kwArgs.of) || poke, fromeffect);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.resultAnim(poke, 'Immune', 'neutral');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-miss': {\r\n\t\t\tlet target = this.getPokemon(args[2]);\r\n\t\t\tif (target) {\r\n\t\t\t\tthis.scene.resultAnim(target, 'Missed', 'neutral');\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fail': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already burned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already poisoned', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tif (fromeffect.id === 'uproar') {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Already asleep', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already paralyzed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Already frozen', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'unboost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stat drop blocked', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (poke) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Failed', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.animReset(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-block': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tpoke.addTurnstatus('quickguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tpoke.addTurnstatus('wideguard' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tpoke.addTurnstatus('craftyshield' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tpoke.addTurnstatus('protect' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'safetygoggles':\r\n\t\t\t\tpoke.item = 'Safety Goggles';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protectivepads':\r\n\t\t\t\tpoke.item = 'Protective Pads';\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-center': case '-notarget': case '-ohko':\r\n\t\tcase '-combine': case '-hitcount': case '-waiting': case '-zbroken': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-zpower': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tthis.scene.runOtherAnim('zpower' as ID, [poke]);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-prepare': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet moveid = toID(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]) || poke.side.foe.active[0] || poke;\r\n\t\t\tthis.scene.runPrepareAnim(moveid, poke, target);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mustrecharge': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.addMovestatus('mustrecharge' as ID);\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-status': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of) || poke;\r\n\t\t\tpoke.status = args[2] as StatusName;\r\n\t\t\tthis.activateAbility(ofpoke || poke, effect);\r\n\t\t\tif (effect.effectType === 'Item') {\r\n\t\t\t\tofpoke.item = effect.name;\r\n\t\t\t}\r\n\r\n\t\t\tswitch (args[2]) {\r\n\t\t\tcase 'brn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Burned', 'brn');\r\n\t\t\t\tthis.scene.runStatusAnim('brn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'tox':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Toxic poison', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tpoke.statusData.toxicTurns = (effect.name === \"Toxic Orb\" ? -1 : 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'psn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Poisoned', 'psn');\r\n\t\t\t\tthis.scene.runStatusAnim('psn' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'slp':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Asleep', 'slp');\r\n\t\t\t\tif (effect.id === 'rest') {\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0; // for Gen 2 use through Sleep Talk\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'par':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Paralyzed', 'par');\r\n\t\t\t\tthis.scene.runStatusAnim('par' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'frz':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Frozen', 'frz');\r\n\t\t\t\tthis.scene.runStatusAnim('frz' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-curestatus': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'flamewheel':\r\n\t\t\t\tcase 'flareblitz':\r\n\t\t\t\tcase 'fusionflare':\r\n\t\t\t\tcase 'sacredfire':\r\n\t\t\t\tcase 'scald':\r\n\t\t\t\tcase 'steameruption':\r\n\t\t\t\t\tkwArgs.thaw = '.';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (poke) {\r\n\t\t\t\tpoke.status = '';\r\n\t\t\t\tswitch (args[2]) {\r\n\t\t\t\tcase 'brn':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Burn cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'tox':\r\n\t\t\t\tcase 'psn':\r\n\t\t\t\t\tpoke.statusData.toxicTurns = 0;\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Poison cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slp':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Woke up', 'good');\r\n\t\t\t\t\tpoke.statusData.sleepTurns = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'par':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Paralysis cured', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frz':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Thawed', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.removeVolatile('confusion' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Cured', 'good');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\t\tcase '-cureteam': { // For old gens when the whole team was always cured\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tfor (const target of poke.side.pokemon) {\r\n\t\t\t\ttarget.status = '';\r\n\t\t\t\tthis.scene.updateStatbarIfExists(target);\r\n\t\t\t}\r\n\r\n\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-item': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.item = item.name;\r\n\t\t\tpoke.itemEffect = '';\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tif (item.id === 'airballoon') poke.addVolatile('airballoon' as ID);\r\n\r\n\t\t\tif (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'pickup':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Pickup\");\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'recycle':\r\n\t\t\t\t\tpoke.itemEffect = 'found';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'frisk':\r\n\t\t\t\t\tthis.activateAbility(ofpoke!, \"Frisk\");\r\n\t\t\t\t\tif (poke && poke !== ofpoke) { // used for gen 6\r\n\t\t\t\t\t\tpoke.itemEffect = 'frisked';\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'magician':\r\n\t\t\t\tcase 'pickpocket':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tcase 'thief':\r\n\t\t\t\tcase 'covet':\r\n\t\t\t\t\t// simulate the removal of the item from the ofpoke\r\n\t\t\t\t\tofpoke!.item = '';\r\n\t\t\t\t\tofpoke!.itemEffect = '';\r\n\t\t\t\t\tofpoke!.prevItem = item.name;\r\n\t\t\t\t\tofpoke!.prevItemEffect = 'stolen';\r\n\t\t\t\t\tofpoke!.addVolatile('itemremoved' as ID);\r\n\t\t\t\t\tpoke.itemEffect = 'stolen';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tthis.scene.resultAnim(ofpoke!, 'Item Stolen', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'harvest':\r\n\t\t\t\t\tpoke.itemEffect = 'harvested';\r\n\t\t\t\t\tthis.activateAbility(poke, \"Harvest\");\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bestow':\r\n\t\t\t\t\tpoke.itemEffect = 'bestowed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, item.name, 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'switcheroo':\r\n\t\t\t\tcase 'trick':\r\n\t\t\t\t\tpoke.itemEffect = 'tricked';\r\n\t\t\t\t\t// falls through\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-enditem': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (this.gen > 4 || effect.id !== 'knockoff') {\r\n\t\t\t\tpoke.item = '';\r\n\t\t\t\tpoke.itemEffect = '';\r\n\t\t\t\tpoke.prevItem = item.name;\r\n\t\t\t\tpoke.prevItemEffect = '';\r\n\t\t\t}\r\n\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\tpoke.addVolatile('itemremoved' as ID);\r\n\t\t\tif (kwArgs.eat) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.scene.runOtherAnim('consume' as ID, [poke]);\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (kwArgs.weaken) {\r\n\t\t\t\tpoke.prevItemEffect = 'eaten';\r\n\t\t\t\tthis.lastMove = item.id;\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'fling':\r\n\t\t\t\t\tpoke.prevItemEffect = 'flung';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'knockoff':\r\n\t\t\t\t\tif (this.gen <= 4) {\r\n\t\t\t\t\t\tpoke.itemEffect = 'knocked off';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpoke.prevItemEffect = 'knocked off';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.scene.runOtherAnim('itemoff' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Item knocked off', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stealeat':\r\n\t\t\t\t\tpoke.prevItemEffect = 'stolen';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'gem':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'incinerate':\r\n\t\t\t\t\tpoke.prevItemEffect = 'incinerated';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswitch (item.id) {\r\n\t\t\t\tcase 'airballoon':\r\n\t\t\t\t\tpoke.prevItemEffect = 'popped';\r\n\t\t\t\t\tpoke.removeVolatile('airballoon' as ID);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Balloon popped', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focussash':\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Sash', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'focusband':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Focus Band', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'redcard':\r\n\t\t\t\t\tpoke.prevItemEffect = 'held up';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tpoke.prevItemEffect = 'consumed';\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-ability': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.abilities.get(args[2]);\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tpoke.rememberAbility(ability.name, effect.id && !kwArgs.fail);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else if (effect.id) {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'trace':\r\n\t\t\t\t\tthis.activateAbility(poke, \"Trace\");\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powerofalchemy':\r\n\t\t\t\tcase 'receiver':\r\n\t\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\t\tthis.scene.wait(500);\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'roleplay':\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name, true);\r\n\t\t\t\t\tofpoke!.rememberAbility(ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'desolateland':\r\n\t\t\t\tcase 'primordialsea':\r\n\t\t\t\tcase 'deltastream':\r\n\t\t\t\t\tif (kwArgs.fail) {\r\n\t\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.activateAbility(poke, ability.name);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-endability': {\r\n\t\t\t// deprecated; use |-start| for Gastro Acid\r\n\t\t\t// and the third arg of |-ability| for Entrainment et al\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet ability = Dex.abilities.get(args[2]);\r\n\t\t\tpoke.ability = '(suppressed)';\r\n\r\n\t\t\tif (ability.id) {\r\n\t\t\t\tif (!poke.baseAbility) poke.baseAbility = ability.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'detailschange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.removeVolatile('formechange' as ID);\r\n\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\r\n\t\t\tlet newSpeciesForme = args[2];\r\n\t\t\tlet commaIndex = newSpeciesForme.indexOf(',');\r\n\t\t\tif (commaIndex !== -1) {\r\n\t\t\t\tlet level = newSpeciesForme.substr(commaIndex + 1).trim();\r\n\t\t\t\tif (level.charAt(0) === 'L') {\r\n\t\t\t\t\tpoke.level = parseInt(level.substr(1), 10);\r\n\t\t\t\t}\r\n\t\t\t\tnewSpeciesForme = args[2].substr(0, commaIndex);\r\n\t\t\t}\r\n\t\t\tlet species = this.dex.species.get(newSpeciesForme);\r\n\r\n\t\t\tpoke.speciesForme = newSpeciesForme;\r\n\t\t\tpoke.ability = poke.baseAbility = (species.abilities ? species.abilities['0'] : '');\r\n\r\n\t\t\tpoke.details = args[2];\r\n\t\t\tpoke.searchid = args[1].substr(0, 2) + args[1].substr(3) + '|' + args[2];\r\n\r\n\t\t\tif (poke.getSpeciesForme() === 'Palafin-Hero') {\r\n\t\t\t\tpoke.sprite.sp = Dex.getSpriteData(poke, poke.sprite.isFrontSprite, {\r\n\t\t\t\t\tgen: poke.sprite.scene.gen,\r\n\t\t\t\t\tmod: poke.sprite.scene.mod,\r\n\t\t\t\t});\r\n\t\t\t\tpoke.sprite.oldsp = null;\r\n\t\t\t} else {\r\n\t\t\t\tthis.scene.animTransform(poke, true, true);\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-transform': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet tpoke = this.getPokemon(args[2])!;\r\n\t\t\tlet effect = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (poke === tpoke) throw new Error(\"Transforming into self\");\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\t}\r\n\r\n\t\t\tpoke.boosts = {...tpoke.boosts};\r\n\t\t\tpoke.copyTypesFrom(tpoke, true);\r\n\t\t\tpoke.ability = tpoke.ability;\r\n\t\t\tpoke.timesAttacked = tpoke.timesAttacked;\r\n\t\t\tconst targetForme = tpoke.volatiles.formechange;\r\n\t\t\tconst speciesForme = (targetForme && !targetForme[1].endsWith('-Gmax')) ? targetForme[1] : tpoke.speciesForme;\r\n\t\t\tconst pokemon = tpoke;\r\n\t\t\tconst shiny = tpoke.shiny;\r\n\t\t\tconst gender = tpoke.gender;\r\n\t\t\tconst level = tpoke.level;\r\n\t\t\tpoke.addVolatile('transform' as ID, pokemon, shiny, gender, level);\r\n\t\t\tpoke.addVolatile('formechange' as ID, speciesForme);\r\n\t\t\tfor (const trackedMove of tpoke.moveTrack) {\r\n\t\t\t\tpoke.rememberMove(trackedMove[0], 0);\r\n\t\t\t}\r\n\t\t\tthis.scene.animTransform(poke);\r\n\t\t\tthis.scene.resultAnim(poke, 'Transformed', 'good');\r\n\t\t\tthis.log(['-transform', args[1], args[2], tpoke.speciesForme], kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-formechange': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet species = Dex.species.get(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tlet isCustomAnim = species.name.startsWith('Wishiwashi');\r\n\t\t\tif (!poke.getSpeciesForme().endsWith('-Gmax') && !species.name.endsWith('-Gmax')) {\r\n\t\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\t\tpoke.removeVolatile('typechange' as ID);\r\n\t\t\t\tif (this.gen >= 6) poke.removeVolatile('autotomize' as ID);\r\n\t\t\t}\r\n\r\n\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\t}\r\n\t\t\tpoke.addVolatile('formechange' as ID, species.name); // the formechange volatile reminds us to revert the sprite change on switch-out\r\n\t\t\tthis.scene.animTransform(poke, isCustomAnim);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-mega': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet item = Dex.items.get(args[3]);\r\n\t\t\tif (args[3]) {\r\n\t\t\t\tpoke.item = item.name;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-primal': case '-burst': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-terastallize': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet type = Dex.types.get(args[2]).name;\r\n\t\t\tpoke.terastallized = type;\r\n\t\t\tpoke.details += `, tera:${type}`;\r\n\t\t\tpoke.searchid += `, tera:${type}`;\r\n\t\t\tthis.scene.animTransform(poke, true, true);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-start': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tthis.activateAbility(ofpoke || poke, fromeffect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'typechange':\r\n\t\t\t\tif (poke.terastallized) break;\r\n\t\t\t\tif (ofpoke && fromeffect.id === 'reflecttype') {\r\n\t\t\t\t\tpoke.copyTypesFrom(ofpoke);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst types = Dex.sanitizeName(args[3] || '???');\r\n\t\t\t\t\tpoke.removeVolatile('typeadd' as ID);\r\n\t\t\t\t\tpoke.addVolatile('typechange' as ID, types);\r\n\t\t\t\t\tif (!kwArgs.silent) {\r\n\t\t\t\t\t\tthis.scene.typeAnim(poke, types);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'typeadd':\r\n\t\t\t\tconst type = Dex.sanitizeName(args[3]);\r\n\t\t\t\tpoke.addVolatile('typeadd' as ID, type);\r\n\t\t\t\tif (kwArgs.silent) break;\r\n\t\t\t\tthis.scene.typeAnim(poke, type);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'dynamax':\r\n\t\t\t\tpoke.addVolatile('dynamax' as ID, !!args[3]);\r\n\t\t\t\tthis.scene.animTransform(poke, true);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'powertrick':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'foresight':\r\n\t\t\tcase 'miracleeye':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Identified', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'telekinesis':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'confusion':\r\n\t\t\t\tif (!kwArgs.already) {\r\n\t\t\t\t\tthis.scene.runStatusAnim('confused' as ID, [poke]);\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confused', 'bad');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'leechseed':\r\n\t\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'yawn':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Drowsy', 'slp');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'taunt':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Taunted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'imprison':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Imprisoning', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'disable':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Disabled', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'embargo':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Embargo', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'torment':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Tormented', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'ingrain':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Ingrained', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'aquaring':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Aqua Ring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile1':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile2':\r\n\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;2', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'stockpile3':\r\n\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Stockpile&times;3', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish0':\r\n\t\t\t\tpoke.removeVolatile('perish1' as ID);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish1':\r\n\t\t\t\tpoke.removeVolatile('perish2' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish next turn', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish2':\r\n\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Perish in 2', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'perish3':\r\n\t\t\t\tif (!kwArgs.silent) this.scene.resultAnim(poke, 'Perish in 3', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'encore':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Encored', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Bide', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Attracted', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'autotomize':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Lightened', 'good');\r\n\t\t\t\tif (poke.volatiles.autotomize) {\r\n\t\t\t\t\tpoke.volatiles.autotomize[1]++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpoke.addVolatile('autotomize' as ID, 1);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusenergy':\r\n\t\t\t\tthis.scene.resultAnim(poke, '+Crit rate', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'curse':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Cursed', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'nightmare':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Nightmare', 'bad');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'magnetrise':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Magnet Rise', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'smackdown':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Smacked Down', 'bad');\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tif (poke.lastMove === 'fly' || poke.lastMove === 'bounce') this.scene.animReset(poke);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// Gen 1-2\r\n\t\t\tcase 'mist':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Mist', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\t// Gen 1\r\n\t\t\tcase 'lightscreen':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Light Screen', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'reflect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Reflect', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!(effect.id === 'typechange' && poke.terastallized)) {\r\n\t\t\t\tpoke.addVolatile(effect.id);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-end': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tpoke.removeVolatile(effect.id);\r\n\r\n\t\t\tif (kwArgs.silent) {\r\n\t\t\t\t// do nothing\r\n\t\t\t} else {\r\n\t\t\t\tswitch (effect.id) {\r\n\t\t\t\tcase 'dynamax':\r\n\t\t\t\t\tthis.scene.animTransform(poke);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'powertrick':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Power Trick', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'telekinesis':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Telekinesis&nbsp;ended', 'neutral');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'skydrop':\r\n\t\t\t\t\tif (kwArgs.interrupt) {\r\n\t\t\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'confusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Confusion&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'leechseed':\r\n\t\t\t\t\tif (fromeffect.id === 'rapidspin') {\r\n\t\t\t\t\t\tthis.scene.resultAnim(poke, 'De-seeded', 'good');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'healblock':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Heal Block ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'attract':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Attract&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'taunt':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Taunt&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'disable':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Disable&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'embargo':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Embargo ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'torment':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Torment&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'encore':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Encore&nbsp;ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'bide':\r\n\t\t\t\t\tthis.scene.runOtherAnim('bideunleash' as ID, [poke]);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'illusion':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Illusion ended', 'bad');\r\n\t\t\t\t\tpoke.rememberAbility('Illusion');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'slowstart':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Slow Start ended', 'good');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'perishsong': // for backwards compatibility\r\n\t\t\t\t\tpoke.removeVolatile('perish3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'substitute':\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Faded', 'bad');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stockpile':\r\n\t\t\t\t\tpoke.removeVolatile('stockpile1' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile2' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('stockpile3' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'protosynthesis':\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisatk' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisdef' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspa' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspd' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('protosynthesisspe' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'quarkdrive':\r\n\t\t\t\t\tpoke.removeVolatile('quarkdriveatk' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('quarkdrivedef' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespa' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespd' as ID);\r\n\t\t\t\t\tpoke.removeVolatile('quarkdrivespe' as ID);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif (effect.effectType === 'Move') {\r\n\t\t\t\t\t\tif (effect.name === 'Doom Desire') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('doomdesirehit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (effect.name === 'Future Sight') {\r\n\t\t\t\t\t\t\tthis.scene.runOtherAnim('futuresighthit' as ID, [poke]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singleturn': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tif (effect.id === 'roost' && !poke.getTypeList().includes('Flying')) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tpoke.addTurnstatus(effect.id);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'roost':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Landed', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quickguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Quick Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'wideguard':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Wide Guard', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'craftyshield':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Crafty Shield', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'matblock':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Mat Block', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'protect':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protected', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'endure':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Enduring', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'helpinghand':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Helping Hand', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focuspunch':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Focusing', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'shelltrap':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Trap set', 'neutral');\r\n\t\t\t\tpoke.rememberMove(effect.name, 0);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'beakblast':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Beak Blast', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-singlemove': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tpoke.addMovestatus(effect.id);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Grudge', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'destinybond':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Destiny Bond', 'neutral');\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.scene.updateStatbar(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-activate': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet target = this.getPokemon(args[3]);\r\n\t\t\tthis.activateAbility(poke, effect);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'poltergeist':\r\n\t\t\t\tpoke.item = kwArgs.item;\r\n\t\t\t\tpoke.itemEffect = 'disturbed';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'grudge':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, Infinity);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'substitute':\r\n\t\t\t\tif (kwArgs.damage) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Damage', 'bad');\r\n\t\t\t\t} else if (kwArgs.block) {\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Blocked', 'neutral');\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'attract':\r\n\t\t\t\tthis.scene.runStatusAnim('attracted' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'bide':\r\n\t\t\t\tthis.scene.runOtherAnim('bidecharge' as ID, [poke]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// move activations\r\n\t\t\tcase 'aromatherapy':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'healbell':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Team Cured', 'good');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'brickbreak':\r\n\t\t\t\ttarget!.side.removeSideCondition('Reflect');\r\n\t\t\t\ttarget!.side.removeSideCondition('LightScreen');\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'hyperdrill':\r\n\t\t\tcase 'hyperspacefury':\r\n\t\t\tcase 'hyperspacehole':\r\n\t\t\tcase 'phantomforce':\r\n\t\t\tcase 'shadowforce':\r\n\t\t\tcase 'feint':\r\n\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\tpoke.removeTurnstatus('protect' as ID);\r\n\t\t\t\tfor (const curTarget of poke.side.pokemon) {\r\n\t\t\t\t\tcurTarget.removeTurnstatus('wideguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('quickguard' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('craftyshield' as ID);\r\n\t\t\t\t\tcurTarget.removeTurnstatus('matblock' as ID);\r\n\t\t\t\t\tthis.scene.updateStatbar(curTarget);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'eeriespell':\r\n\t\t\tcase 'gmaxdepletion':\r\n\t\t\tcase 'spite':\r\n\t\t\t\tlet move = Dex.moves.get(kwArgs.move).name;\r\n\t\t\t\tlet pp = Number(kwArgs.number);\r\n\t\t\t\tif (isNaN(pp)) pp = 4;\r\n\t\t\t\tpoke.rememberMove(move, pp);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tpoke.removeVolatile('magnetrise' as ID);\r\n\t\t\t\tpoke.removeVolatile('telekinesis' as ID);\r\n\t\t\t\tthis.scene.anim(poke, {time: 100});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'skillswap': case 'wanderingspirit':\r\n\t\t\t\tif (this.gen <= 4) break;\r\n\t\t\t\tlet pokeability = Dex.sanitizeName(kwArgs.ability) || target!.ability;\r\n\t\t\t\tlet targetability = Dex.sanitizeName(kwArgs.ability2) || poke.ability;\r\n\t\t\t\tif (pokeability) {\r\n\t\t\t\t\tpoke.ability = pokeability;\r\n\t\t\t\t\tif (!target!.baseAbility) target!.baseAbility = pokeability;\r\n\t\t\t\t}\r\n\t\t\t\tif (targetability) {\r\n\t\t\t\t\ttarget!.ability = targetability;\r\n\t\t\t\t\tif (!poke.baseAbility) poke.baseAbility = targetability;\r\n\t\t\t\t}\r\n\t\t\t\tif (poke.side !== target!.side) {\r\n\t\t\t\t\tthis.activateAbility(poke, pokeability, true);\r\n\t\t\t\t\tthis.activateAbility(target, targetability, true);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// ability activations\r\n\t\t\tcase 'electromorphosis':\r\n\t\t\tcase 'windpower':\r\n\t\t\t\tpoke.addMovestatus('charge' as ID);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'forewarn':\r\n\t\t\t\tif (target) {\r\n\t\t\t\t\ttarget.rememberMove(kwArgs.move, 0);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet foeActive = [] as Pokemon[];\r\n\t\t\t\t\tfor (const maybeTarget of poke.side.foe.active) {\r\n\t\t\t\t\t\tif (maybeTarget && !maybeTarget.fainted) foeActive.push(maybeTarget);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (foeActive.length === 1) {\r\n\t\t\t\t\t\tfoeActive[0].rememberMove(kwArgs.move, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'lingeringaroma':\r\n\t\t\tcase 'mummy':\r\n\t\t\t\tif (!kwArgs.ability) break; // if Mummy activated but failed, no ability will have been sent\r\n\t\t\t\tlet ability = Dex.abilities.get(kwArgs.ability);\r\n\t\t\t\tthis.activateAbility(target, ability.name);\r\n\t\t\t\tthis.activateAbility(poke, effect.name);\r\n\t\t\t\tthis.scene.wait(700);\r\n\t\t\t\tthis.activateAbility(target, effect.name, true);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// item activations\r\n\t\t\tcase 'leppaberry':\r\n\t\t\tcase 'mysteryberry':\r\n\t\t\t\tpoke.rememberMove(kwArgs.move, effect.id === 'leppaberry' ? -10 : -5);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'focusband':\r\n\t\t\t\tpoke.item = 'Focus Band';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quickclaw':\r\n\t\t\t\tpoke.item = 'Quick Claw';\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'abilityshield':\r\n\t\t\t\tpoke.item = 'Ability Shield';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tif (kwArgs.broken) { // for custom moves that break protection\r\n\t\t\t\t\tthis.scene.resultAnim(poke, 'Protection broken', 'bad');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sidestart': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tside.addSideCondition(effect, !!kwArgs.persistent);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'tailwind':\r\n\t\t\tcase 'auroraveil':\r\n\t\t\tcase 'reflect':\r\n\t\t\tcase 'lightscreen':\r\n\t\t\tcase 'safeguard':\r\n\t\t\tcase 'mist':\r\n\t\t\tcase 'gmaxwildfire':\r\n\t\t\tcase 'gmaxvolcalith':\r\n\t\t\tcase 'gmaxvinelash':\r\n\t\t\tcase 'gmaxcannonade':\r\n\t\t\tcase 'grasspledge':\r\n\t\t\tcase 'firepledge':\r\n\t\t\tcase 'waterpledge':\r\n\t\t\t\tthis.scene.updateWeather();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-sideend': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\t// let from = Dex.getEffect(kwArgs.from);\r\n\t\t\t// let ofpoke = this.getPokemon(kwArgs.of);\r\n\t\t\tside.removeSideCondition(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-swapsideconditions': {\r\n\t\t\tthis.swapSideConditions();\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-weather': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of) || undefined;\r\n\t\t\tlet ability = Dex.getEffect(kwArgs.from);\r\n\t\t\tif (!effect.id || effect.id === 'none') {\r\n\t\t\t\tkwArgs.from = this.weather;\r\n\t\t\t}\r\n\t\t\tthis.changeWeather(effect.name, poke, !!kwArgs.upkeep, ability);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldstart': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tlet poke = this.getPokemon(kwArgs.of);\r\n\t\t\tlet fromeffect = Dex.getEffect(kwArgs.from);\r\n\t\t\tthis.activateAbility(poke, fromeffect);\r\n\t\t\tlet minTimeLeft = 5;\r\n\t\t\tlet maxTimeLeft = 0;\r\n\t\t\tif (effect.id.endsWith('terrain')) {\r\n\t\t\t\tfor (let i = this.pseudoWeather.length - 1; i >= 0; i--) {\r\n\t\t\t\t\tlet pwID = toID(this.pseudoWeather[i][0]);\r\n\t\t\t\t\tif (pwID.endsWith('terrain')) {\r\n\t\t\t\t\t\tthis.pseudoWeather.splice(i, 1);\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.gen > 6) maxTimeLeft = 8;\r\n\t\t\t}\r\n\t\t\tif (kwArgs.persistent) minTimeLeft += 2;\r\n\t\t\tthis.addPseudoWeather(effect.name, minTimeLeft, maxTimeLeft);\r\n\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'gravity':\r\n\t\t\t\tif (this.seeking !== null) break;\r\n\t\t\t\tfor (const active of this.getAllActive()) {\r\n\t\t\t\t\tthis.scene.runOtherAnim('gravity' as ID, [active]);\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldend': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\t// let poke = this.getPokemon(kwArgs.of);\r\n\t\t\tthis.removePseudoWeather(effect.name);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-fieldactivate': {\r\n\t\t\tlet effect = Dex.getEffect(args[1]);\r\n\t\t\tswitch (effect.id) {\r\n\t\t\tcase 'perishsong':\r\n\t\t\t\tthis.scene.updateStatbars();\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-anim': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.moves.get(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase '-hint': case '-message': case '-candynamax': {\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthrow new Error(`Unrecognized minor action: ${args[0]}`);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\t/*\r\n\tparseSpriteData(name) {\r\n\t\tlet siden = 0,\r\n\t\t\tfoe = false;\r\n\t\twhile (true) {\r\n\t\t\tif (name.substr(0, 6) === 'foeof-') {\r\n\t\t\t\tfoe = true;\r\n\t\t\t\tname = name.substr(6);\r\n\t\t\t} else if (name.substr(0, 9) === 'switched-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 9) === 'existing-') name = name.substr(9);\r\n\t\t\telse if (name.substr(0, 4) === 'foe-') {\r\n\t\t\t\tsiden = this.p2.n;\r\n\t\t\t\tname = name.substr(4);\r\n\t\t\t} else if (name.substr(0, 5) === 'ally-') {\r\n\t\t\t\tsiden = this.p1.n;\r\n\t\t\t\tname = name.substr(5);\r\n\t\t\t} else break;\r\n\t\t}\r\n\t\tif (name.substr(name.length - 1) === ')') {\r\n\t\t\tlet parenIndex = name.lastIndexOf('(');\r\n\t\t\tif (parenIndex > 0) {\r\n\t\t\t\tlet species = name.substr(parenIndex + 1);\r\n\t\t\t\tname = species.substr(0, species.length - 1);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (foe) siden = (siden ? 0 : 1);\r\n\r\n\t\tlet data = Dex.species.get(name);\r\n\t\treturn data.spriteData[siden];\r\n\t}\r\n\t*/\r\n\t/**\r\n\t * @param name Leave blank for Team Preview\r\n\t * @param pokemonid Leave blank for Team Preview\r\n\t * @param details\r\n\t * @param output\r\n\t */\r\n\tparseDetails(name: string, pokemonid: string, details: string, output: PokemonDetails = {} as any) {\r\n\t\tconst isTeamPreview = !name;\r\n\t\toutput.details = details;\r\n\t\toutput.name = name;\r\n\t\toutput.speciesForme = name;\r\n\t\toutput.level = 100;\r\n\t\toutput.shiny = false;\r\n\t\toutput.gender = '';\r\n\t\toutput.ident = (!isTeamPreview ? pokemonid : '');\r\n\t\toutput.searchid = (!isTeamPreview ? `${pokemonid}|${details}` : '');\r\n\t\tlet splitDetails = details.split(', ');\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'shiny') {\r\n\t\t\toutput.shiny = true;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[splitDetails.length - 1] === 'M' || splitDetails[splitDetails.length - 1] === 'F') {\r\n\t\t\toutput.gender = splitDetails[splitDetails.length - 1] as GenderName;\r\n\t\t\tsplitDetails.pop();\r\n\t\t}\r\n\t\tif (splitDetails[1]) {\r\n\t\t\toutput.level = parseInt(splitDetails[1].substr(1), 10) || 100;\r\n\t\t}\r\n\t\tif (splitDetails[0]) {\r\n\t\t\toutput.speciesForme = splitDetails[0];\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparseHealth(hpstring: string, output: PokemonHealth = {} as any) {\r\n\t\tlet [hp, status] = hpstring.split(' ');\r\n\r\n\t\t// hp parse\r\n\t\toutput.hpcolor = '';\r\n\t\tif (hp === '0' || hp === '0.0') {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = 0;\r\n\t\t} else if (hp.indexOf('/') > 0) {\r\n\t\t\tlet [curhp, maxhp] = hp.split('/');\r\n\t\t\tif (isNaN(parseFloat(curhp)) || isNaN(parseFloat(maxhp))) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t\toutput.hp = parseFloat(curhp);\r\n\t\t\toutput.maxhp = parseFloat(maxhp);\r\n\t\t\tif (output.hp > output.maxhp) output.hp = output.maxhp;\r\n\t\t\tconst colorchar = maxhp.slice(-1);\r\n\t\t\tif (colorchar === 'y' || colorchar === 'g') {\r\n\t\t\t\toutput.hpcolor = colorchar;\r\n\t\t\t}\r\n\t\t} else if (!isNaN(parseFloat(hp))) {\r\n\t\t\tif (!output.maxhp) output.maxhp = 100;\r\n\t\t\toutput.hp = output.maxhp * parseFloat(hp) / 100;\r\n\t\t}\r\n\r\n\t\t// status parse\r\n\t\tif (!status) {\r\n\t\t\toutput.status = '';\r\n\t\t} else if (status === 'par' || status === 'brn' || status === 'slp' || status === 'frz' || status === 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'psn' && output.status !== 'tox') {\r\n\t\t\toutput.status = status;\r\n\t\t} else if (status === 'fnt') {\r\n\t\t\toutput.hp = 0;\r\n\t\t\toutput.fainted = true;\r\n\t\t}\r\n\t\treturn output;\r\n\t}\r\n\tparsePokemonId(pokemonid: string) {\r\n\t\tlet name = pokemonid;\r\n\r\n\t\tlet siden = -1;\r\n\t\tlet slot = -1; // if there is an explicit slot for this pokemon\r\n\t\tif (/^p[1-9]($|: )/.test(name)) {\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tname = name.slice(4);\r\n\t\t} else if (/^p[1-9][a-f]: /.test(name)) {\r\n\t\t\tconst slotChart: {[k: string]: number} = {a: 0, b: 1, c: 2, d: 3, e: 4, f: 5};\r\n\t\t\tsiden = parseInt(name.charAt(1), 10) - 1;\r\n\t\t\tslot = slotChart[name.charAt(2)];\r\n\t\t\tname = name.slice(5);\r\n\t\t\tpokemonid = `p${siden + 1}: ${name}`;\r\n\t\t}\r\n\t\treturn {name, siden, slot, pokemonid};\r\n\t}\r\n\tgetSwitchedPokemon(pokemonid: string, details: string) {\r\n\t\tif (pokemonid === '??') throw new Error(`pokemonid not passed`);\r\n\t\tconst {name, siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\tconst searchid = `${pokemonid}|${details}`;\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search inactive revealed pokemon\r\n\t\tfor (let i = 0; i < side.pokemon.length; i++) {\r\n\t\t\tlet pokemon = side.pokemon[i];\r\n\t\t\tif (pokemon.fainted) continue;\r\n\t\t\t// already active, can't be switching in\r\n\t\t\tif (side.active.includes(pokemon)) continue;\r\n\t\t\t// just switched out, can't be switching in\r\n\t\t\tif (pokemon === side.lastPokemon && !side.active[slot]) continue;\r\n\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\t// exact match\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t\tif (!pokemon.searchid && pokemon.checkDetails(details)) {\r\n\t\t\t\t// switch-in matches Team Preview entry\r\n\t\t\t\tpokemon = side.addPokemon(name, pokemonid, details, i);\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// pokemon not found, create a new pokemon object for it\r\n\t\tconst pokemon = side.addPokemon(name, pokemonid, details);\r\n\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\treturn pokemon;\r\n\t}\r\n\trememberTeamPreviewPokemon(sideid: string, details: string) {\r\n\t\tconst {siden} = this.parsePokemonId(sideid);\r\n\r\n\t\treturn this.sides[siden].addPokemon('', '', details);\r\n\t}\r\n\tfindCorrespondingPokemon(serverPokemon: {ident: string, details: string}) {\r\n\t\tconst {siden} = this.parsePokemonId(serverPokemon.ident);\r\n\t\tconst searchid = `${serverPokemon.ident}|${serverPokemon.details}`;\r\n\t\tfor (const pokemon of this.sides[siden].pokemon) {\r\n\t\t\tif (pokemon.searchid === searchid) {\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tgetPokemon(pokemonid: string | undefined) {\r\n\t\tif (!pokemonid || pokemonid === '??' || pokemonid === 'null' || pokemonid === 'false') {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tconst {siden, slot, pokemonid: parsedPokemonid} = this.parsePokemonId(pokemonid);\r\n\t\tpokemonid = parsedPokemonid;\r\n\r\n\t\t/** if true, don't match an active pokemon */\r\n\t\tconst isInactive = (slot < 0);\r\n\t\tconst side = this.sides[siden];\r\n\r\n\t\t// search player's pokemon\r\n\t\tif (!isInactive && side.active[slot]) return side.active[slot];\r\n\r\n\t\tfor (const pokemon of side.pokemon) {\r\n\t\t\tif (isInactive && side.active.includes(pokemon)) continue;\r\n\t\t\tif (pokemon.ident === pokemonid) { // name matched, good enough\r\n\t\t\t\tif (slot >= 0) pokemon.slot = slot;\r\n\t\t\t\treturn pokemon;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n\tgetSide(sidename: string): Side {\r\n\t\tif (sidename === 'p1' || sidename.startsWith('p1:')) return this.p1;\r\n\t\tif (sidename === 'p2' || sidename.startsWith('p2:')) return this.p2;\r\n\t\tif ((sidename === 'p3' || sidename.startsWith('p3:')) && this.p3) return this.p3;\r\n\t\tif ((sidename === 'p4' || sidename.startsWith('p4:')) && this.p4) return this.p4;\r\n\t\tif (this.nearSide.id === sidename) return this.nearSide;\r\n\t\tif (this.farSide.id === sidename) return this.farSide;\r\n\t\tif (this.nearSide.name === sidename) return this.nearSide;\r\n\t\tif (this.farSide.name === sidename) return this.farSide;\r\n\t\treturn {\r\n\t\t\tname: sidename,\r\n\t\t\tid: sidename.replace(/ /g, ''),\r\n\t\t} as any;\r\n\t}\r\n\r\n\tadd(command?: string) {\r\n\t\tif (command) this.stepQueue.push(command);\r\n\r\n\t\tif (this.atQueueEnd && this.currentStep < this.stepQueue.length) {\r\n\t\t\tthis.atQueueEnd = false;\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\t/**\r\n\t * PS's preempt system is intended to show chat messages immediately,\r\n\t * instead of waiting for the battle to get to the point where the\r\n\t * message was said.\r\n\t *\r\n\t * In addition to being a nice quality-of-life feature, it's also\r\n\t * important to make sure timer updates happen in real-time.\r\n\t */\r\n\tinstantAdd(command: string) {\r\n\t\tthis.run(command, true);\r\n\t\tthis.preemptStepQueue.push(command);\r\n\t\tthis.add(command);\r\n\t}\r\n\trunMajor(args: Args, kwArgs: KWArgs, preempt?: boolean) {\r\n\t\tswitch (args[0]) {\r\n\t\tcase 'start': {\r\n\t\t\tthis.nearSide.active[0] = null;\r\n\t\t\tthis.farSide.active[0] = null;\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tthis.start();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'upkeep': {\r\n\t\t\tthis.usesUpkeep = true;\r\n\t\t\tthis.updateTurnCounters();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'turn': {\r\n\t\t\tthis.setTurn(parseInt(args[1], 10));\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'tier': {\r\n\t\t\tthis.tier = args[1];\r\n\t\t\tif (this.tier.slice(-13) === 'Random Battle') {\r\n\t\t\t\tthis.speciesClause = true;\r\n\t\t\t}\r\n\t\t\tif (this.tier.slice(-8) === ' (Blitz)') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tif (this.tier.includes(`Let's Go`)) {\r\n\t\t\t\tthis.dex = Dex.mod('gen7letsgo' as ID);\r\n\t\t\t}\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gametype': {\r\n\t\t\tthis.gameType = args[1] as any;\r\n\t\t\tswitch (args[1]) {\r\n\t\t\tcase 'multi':\r\n\t\t\tcase 'freeforall':\r\n\t\t\t\tthis.pokemonControlled = 1;\r\n\t\t\t\tif (!this.p3) this.p3 = new Side(this, 2);\r\n\t\t\t\tif (!this.p4) this.p4 = new Side(this, 3);\r\n\t\t\t\tthis.p3.foe = this.p2;\r\n\t\t\t\tthis.p4.foe = this.p1;\r\n\r\n\t\t\t\tif (args[1] === 'multi') {\r\n\t\t\t\t\tthis.p4.ally = this.p2;\r\n\t\t\t\t\tthis.p3.ally = this.p1;\r\n\t\t\t\t\tthis.p1.ally = this.p3;\r\n\t\t\t\t\tthis.p2.ally = this.p4;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.p3.isFar = this.p1.isFar;\r\n\t\t\t\tthis.p4.isFar = this.p2.isFar;\r\n\t\t\t\tthis.sides = [this.p1, this.p2, this.p3, this.p4];\r\n\t\t\t\t// intentionally sync p1/p3 and p2/p4's active arrays\r\n\t\t\t\tthis.p1.active = this.p3.active = [null, null];\r\n\t\t\t\tthis.p2.active = this.p4.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'doubles':\r\n\t\t\t\tthis.nearSide.active = [null, null];\r\n\t\t\t\tthis.farSide.active = [null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'triples':\r\n\t\t\tcase 'rotation':\r\n\t\t\t\tthis.nearSide.active = [null, null, null];\r\n\t\t\t\tthis.farSide.active = [null, null, null];\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tfor (const side of this.sides) side.active = [null];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif (!this.pokemonControlled) this.pokemonControlled = this.nearSide.active.length;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.scene.resetSides();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rule': {\r\n\t\t\tlet ruleName = args[1].split(': ')[0];\r\n\t\t\tif (ruleName === 'Species Clause') this.speciesClause = true;\r\n\t\t\tif (ruleName === 'Blitz') {\r\n\t\t\t\tthis.messageFadeTime = 40;\r\n\t\t\t\tthis.isBlitz = true;\r\n\t\t\t}\r\n\t\t\tthis.rules[ruleName] = 1;\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'rated': {\r\n\t\t\tthis.rated = args[1] || true;\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactive': {\r\n\t\t\tif (!this.kickingInactive) this.kickingInactive = true;\r\n\t\t\tif (args[1].slice(0, 11) === \"Time left: \") {\r\n\t\t\t\tlet [time, totalTime, graceTime] = args[1].split(' | ');\r\n\t\t\t\tthis.kickingInactive = parseInt(time.slice(11), 10) || true;\r\n\t\t\t\tthis.totalTimeLeft = parseInt(totalTime, 10);\r\n\t\t\t\tthis.graceTimeLeft = parseInt(graceTime || '', 10) || 0;\r\n\t\t\t\tif (this.totalTimeLeft === this.kickingInactive) this.totalTimeLeft = 0;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(0, 9) === \"You have \") {\r\n\t\t\t\t// this is ugly but parseInt is documented to work this way\r\n\t\t\t\t// so I'm going to be lazy and not chop off the rest of the\r\n\t\t\t\t// sentence\r\n\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(9), 10) || true;\r\n\t\t\t\treturn;\r\n\t\t\t} else if (args[1].slice(-14) === ' seconds left.') {\r\n\t\t\t\tlet hasIndex = args[1].indexOf(' has ');\r\n\t\t\t\tlet userid = window.app?.user?.get('userid');\r\n\t\t\t\tif (toID(args[1].slice(0, hasIndex)) === userid) {\r\n\t\t\t\t\tthis.kickingInactive = parseInt(args[1].slice(hasIndex + 5), 10) || true;\r\n\t\t\t\t}\r\n\t\t\t} else if (args[1].slice(-27) === ' 15 seconds left this turn.') {\r\n\t\t\t\tif (this.isBlitz) return;\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'inactiveoff': {\r\n\t\t\tthis.kickingInactive = false;\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'join': case 'j': case 'J': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\tif (!room.users[userid]) room.userCount.users++;\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'leave': case 'l': case 'L': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = args[1];\r\n\t\t\t\tlet userid = toUserid(user);\r\n\t\t\t\tif (room.users[userid]) room.userCount.users--;\r\n\t\t\t\tdelete room.users[userid];\r\n\t\t\t\troom.userList.remove(userid);\r\n\t\t\t\troom.userList.updateUserCount();\r\n\t\t\t\troom.userList.updateNoUsersOnline();\r\n\t\t\t}\r\n\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'name': case 'n': case 'N': {\r\n\t\t\tif (this.roomid) {\r\n\t\t\t\tlet room = app!.rooms[this.roomid];\r\n\t\t\t\tlet user = BattleTextParser.parseNameParts(args[1]);\r\n\t\t\t\tlet oldid = args[2];\r\n\t\t\t\tif (toUserid(oldid) === app!.user.get('userid')) {\r\n\t\t\t\t\tapp!.user.set({\r\n\t\t\t\t\t\taway: user.away,\r\n\t\t\t\t\t\tstatus: user.status,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tlet userid = toUserid(user.name);\r\n\t\t\t\troom.users[userid] = user;\r\n\t\t\t\troom.userList.remove(oldid);\r\n\t\t\t\troom.userList.add(userid);\r\n\t\t\t}\r\n\t\t\tif (!this.ignoreSpects) {\r\n\t\t\t\tthis.log(args, undefined, preempt);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'player': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.setName(args[2]);\r\n\t\t\tif (args[3]) side.setAvatar(args[3]);\r\n\t\t\tif (args[4]) side.rating = args[4];\r\n\t\t\tif (this.joinButtons) this.scene.hideJoinButtons();\r\n\t\t\tthis.log(args);\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teamsize': {\r\n\t\t\tlet side = this.getSide(args[1]);\r\n\t\t\tside.totalPokemon = parseInt(args[2], 10);\r\n\t\t\tthis.scene.updateSidebar(side);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'win': case 'tie': {\r\n\t\t\tthis.winner(args[0] === 'tie' ? undefined : args[1]);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'prematureend': {\r\n\t\t\tthis.prematureEnd();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'clearpoke': {\r\n\t\t\tthis.p1.clearPokemon();\r\n\t\t\tthis.p2.clearPokemon();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'poke': {\r\n\t\t\tlet pokemon = this.rememberTeamPreviewPokemon(args[1], args[2])!;\r\n\t\t\tif (args[3] === 'mail') {\r\n\t\t\t\tpokemon.item = '(mail)';\r\n\t\t\t} else if (args[3] === 'item') {\r\n\t\t\t\tpokemon.item = '(exists)';\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'updatepoke': {\r\n\t\t\tconst {siden} = this.parsePokemonId(args[1]);\r\n\t\t\tconst side = this.sides[siden];\r\n\t\t\tfor (let i = 0; i < side.pokemon.length; i++) {\r\n\t\t\t\tconst pokemon = side.pokemon[i];\r\n\t\t\t\tif (pokemon.details !== args[2] && pokemon.checkDetails(args[2])) {\r\n\t\t\t\t\tside.addPokemon('', '', args[2], i);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'teampreview': {\r\n\t\t\tthis.teamPreviewCount = parseInt(args[1], 10);\r\n\t\t\tthis.scene.teamPreview();\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'switch': case 'drag': case 'replace': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tlet poke = this.getSwitchedPokemon(args[1], args[2])!;\r\n\t\t\tlet slot = poke.slot;\r\n\t\t\tpoke.healthParse(args[3]);\r\n\t\t\tpoke.removeVolatile('itemremoved' as ID);\r\n\t\t\tif (args[0] === 'switch') {\r\n\t\t\t\tif (poke.side.active[slot]) {\r\n\t\t\t\t\tpoke.side.switchOut(poke.side.active[slot]!, kwArgs);\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.switchIn(poke, kwArgs);\r\n\t\t\t} else if (args[0] === 'replace') {\r\n\t\t\t\tpoke.side.replace(poke);\r\n\t\t\t} else {\r\n\t\t\t\tpoke.side.dragIn(poke);\r\n\t\t\t}\r\n\t\t\tthis.scene.updateWeather();\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'faint': {\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tpoke.side.faint(poke);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'swap': {\r\n\t\t\tif (isNaN(Number(args[2]))) {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tpoke.side.swapWith(poke, this.getPokemon(args[2])!, kwArgs);\r\n\t\t\t} else {\r\n\t\t\t\tconst poke = this.getPokemon(args[1])!;\r\n\t\t\t\tconst targetIndex = parseInt(args[2], 10);\r\n\t\t\t\tif (kwArgs.from) {\r\n\t\t\t\t\tconst target = poke.side.active[targetIndex];\r\n\t\t\t\t\tif (target) args[2] = target.ident;\r\n\t\t\t\t}\r\n\t\t\t\tpoke.side.swapTo(poke, targetIndex);\r\n\t\t\t}\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'move': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet move = Dex.moves.get(args[2]);\r\n\t\t\tif (this.checkActive(poke)) return;\r\n\t\t\tlet poke2 = this.getPokemon(args[3]);\r\n\t\t\tthis.scene.beforeMove(poke);\r\n\t\t\tthis.useMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.animateMove(poke, move, poke2, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tthis.scene.afterMove(poke);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'cant': {\r\n\t\t\tthis.endLastTurn();\r\n\t\t\tthis.resetTurnsSinceMoved();\r\n\t\t\tlet poke = this.getPokemon(args[1])!;\r\n\t\t\tlet effect = Dex.getEffect(args[2]);\r\n\t\t\tlet move = Dex.moves.get(args[3]);\r\n\t\t\tthis.cantUseMove(poke, effect, move, kwArgs);\r\n\t\t\tthis.log(args, kwArgs);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'gen': {\r\n\t\t\tthis.gen = parseInt(args[1], 10);\r\n\t\t\tthis.dex = Dex.forGen(this.gen);\r\n\t\t\tthis.scene.updateGen();\r\n\t\t\tthis.log(args);\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'callback': {\r\n\t\t\tthis.subscription?.('callback');\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'fieldhtml': {\r\n\t\t\tthis.scene.setFrameHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tcase 'controlshtml': {\r\n\t\t\tthis.scene.setControlsHTML(BattleLog.sanitizeHTML(args[1]));\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\tdefault: {\r\n\t\t\tthis.log(args, kwArgs, preempt);\r\n\t\t\tbreak;\r\n\t\t}}\r\n\t}\r\n\r\n\trun(str: string, preempt?: boolean) {\r\n\t\tif (!preempt && this.preemptStepQueue.length && str === this.preemptStepQueue[0]) {\r\n\t\t\tthis.preemptStepQueue.shift();\r\n\t\t\tthis.scene.preemptCatchup();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!str) return;\r\n\t\tconst {args, kwArgs} = BattleTextParser.parseBattleLine(str);\r\n\r\n\t\tif (this.scene.maybeCloseMessagebar(args, kwArgs)) {\r\n\t\t\tthis.currentStep--;\r\n\t\t\tthis.activeMoveIsSpread = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// parse the next line if it's a minor: runMinor needs it parsed to determine when to merge minors\r\n\t\tlet nextArgs: Args = [''];\r\n\t\tlet nextKwargs: KWArgs = {};\r\n\t\tconst nextLine = this.stepQueue[this.currentStep + 1] || '';\r\n\t\tif (nextLine.slice(0, 2) === '|-') {\r\n\t\t\t({args: nextArgs, kwArgs: nextKwargs} = BattleTextParser.parseBattleLine(nextLine));\r\n\t\t}\r\n\r\n\t\tif (this.debug) {\r\n\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t} else {\r\n\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tif (args[0].charAt(0) === '-' || args[0] === 'detailschange') {\r\n\t\t\t\t\tthis.runMinor(args, kwArgs, nextArgs, nextKwargs);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.runMajor(args, kwArgs, preempt);\r\n\t\t\t\t}\r\n\t\t\t} catch (err: any) {\r\n\t\t\t\tthis.log(['majorerror', 'Error parsing: ' + str + ' (' + err + ')']);\r\n\t\t\t\tif (err.stack) {\r\n\t\t\t\t\tlet stack = ('' + err.stack).split('\\n');\r\n\t\t\t\t\tfor (const line of stack) {\r\n\t\t\t\t\t\tif (/\\brun\\b/.test(line)) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.log(['error', line]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('error');\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (nextLine.startsWith('|start') || args[0] === 'teampreview') {\r\n\t\t\tif (this.turn === -1) {\r\n\t\t\t\tthis.turn = 0;\r\n\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcheckActive(poke: Pokemon) {\r\n\t\tif (!poke.side.active[poke.slot]) {\r\n\t\t\t// SOMEONE jumped in in the middle of a replay. <_<\r\n\t\t\tpoke.side.replace(poke);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpause() {\r\n\t\tthis.paused = true;\r\n\t\tthis.scene.pause();\r\n\t\tthis.subscription?.('paused');\r\n\t}\r\n\t/**\r\n\t * Properties relevant to battle playback, for replay UI implementers:\r\n\t * - `ended`: has the game ended in a win/loss?\r\n\t * - `atQueueEnd`: is animation caught up to the end of the battle queue, waiting for more input?\r\n\t * - `seeking`: are we trying to skip to a specific turn\r\n\t * - `turn`: what turn are we currently on? `-1` if we haven't started yet, `0` at team preview\r\n\t * - `paused`: are we playing at all?\r\n\t */\r\n\tplay() {\r\n\t\tthis.paused = false;\r\n\t\tthis.started = true;\r\n\t\tthis.scene.resume();\r\n\t\tthis.nextStep();\r\n\t\tthis.subscription?.('playing');\r\n\t}\r\n\tskipTurn() {\r\n\t\tthis.seekTurn(this.turn + 1);\r\n\t}\r\n\tseekTurn(turn: number, forceReset?: boolean) {\r\n\t\tif (isNaN(turn)) return;\r\n\t\tturn = Math.max(Math.floor(turn), 0);\r\n\r\n\t\tif (this.seeking !== null && this.seeking > turn && !forceReset) {\r\n\t\t\tthis.seeking = turn;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (turn === 0) {\r\n\t\t\tthis.seeking = null;\r\n\t\t\tthis.resetStep();\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tif (this.paused) this.subscription?.('paused');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.seeking = turn;\r\n\r\n\t\tif (turn <= this.turn || forceReset) {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.resetStep();\r\n\t\t} else if (this.atQueueEnd) {\r\n\t\t\tthis.scene.animationOn();\r\n\t\t\tthis.seeking = null;\r\n\t\t} else {\r\n\t\t\tthis.scene.animationOff();\r\n\t\t\tthis.nextStep();\r\n\t\t}\r\n\t}\r\n\tstopSeeking() {\r\n\t\tthis.seeking = null;\r\n\t\tthis.scene.animationOn();\r\n\t\tthis.subscription?.(this.paused ? 'paused' : 'playing');\r\n\t}\r\n\tshouldStep() {\r\n\t\tif (this.atQueueEnd) return false;\r\n\t\tif (this.seeking !== null) return true;\r\n\t\treturn !(this.paused && this.turn >= 0);\r\n\t}\r\n\tnextStep() {\r\n\t\tif (!this.shouldStep()) return;\r\n\r\n\t\tthis.scene.startAnimations();\r\n\t\tlet animations = undefined;\r\n\r\n\t\tdo {\r\n\t\t\tthis.waitForAnimations = true;\r\n\t\t\tif (this.currentStep >= this.stepQueue.length) {\r\n\t\t\t\tthis.atQueueEnd = true;\r\n\t\t\t\tif (!this.ended && this.isReplay) this.prematureEnd();\r\n\t\t\t\tthis.stopSeeking();\r\n\t\t\t\tif (this.ended) {\r\n\t\t\t\t\tthis.scene.updateBgm();\r\n\t\t\t\t}\r\n\t\t\t\tthis.subscription?.('atqueueend');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.run(this.stepQueue[this.currentStep]);\r\n\t\t\tthis.currentStep++;\r\n\t\t\tif (this.waitForAnimations === true) {\r\n\t\t\t\tanimations = this.scene.finishAnimations();\r\n\t\t\t} else if (this.waitForAnimations === 'simult') {\r\n\t\t\t\tthis.scene.timeOffset = 0;\r\n\t\t\t}\r\n\t\t} while (!animations && this.shouldStep());\r\n\r\n\t\tif (this.paused && this.turn >= 0 && this.seeking === null) {\r\n\t\t\t// initial Play button, team preview\r\n\t\t\tthis.scene.pause();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!animations) return;\r\n\r\n\t\tconst interruptionCount = this.scene.interruptionCount;\r\n\t\tanimations.done(() => {\r\n\t\t\tif (interruptionCount === this.scene.interruptionCount) {\r\n\t\t\t\tthis.nextStep();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tsetQueue(queue: string[]) {\r\n\t\tthis.stepQueue = queue;\r\n\t\tthis.resetStep();\r\n\t}\r\n\r\n\tsetMute(mute: boolean) {\r\n\t\tthis.scene.setMute(mute);\r\n\t}\r\n}\r\n\r\nif (typeof require === 'function') {\r\n\t// in Node\r\n\t(global as any).Battle = Battle;\r\n\t(global as any).Pokemon = Pokemon;\r\n}\r\n"],"file":"battle.js"}